// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name CashfreePGCoreSDK
import AppTrackingTransparency
@_exported import CashfreePGCoreSDK
import CoreData
import Foundation
import MachO
import Swift
import SystemConfiguration
import UIKit
import WebKit
import _Concurrency
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc @_Concurrency.MainActor(unsafe) final public class CFWebView : WebKit.WKWebView, WebKit.WKNavigationDelegate {
  @objc @_Concurrency.MainActor(unsafe) override dynamic public init(frame: CoreGraphics.CGRect, configuration: WebKit.WKWebViewConfiguration)
  @objc @_Concurrency.MainActor(unsafe) final public func startAuthentication() throws
  @_Concurrency.MainActor(unsafe) @objc final public func webView(_ webView: WebKit.WKWebView, decidePolicyFor navigationAction: WebKit.WKNavigationAction, decisionHandler: @escaping (WebKit.WKNavigationActionPolicy) -> Swift.Void)
  @_Concurrency.MainActor(unsafe) final public func removeWebViewReference()
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc final public class CFCardPayment : CashfreePGCoreSDK.CFPayment {
  @objc override final public func printDescription()
  @_inheritsConvenienceInitializers @objc final public class CFCardPaymentBuilder : ObjectiveC.NSObject {
    @objc override dynamic public init()
    @objc final public func setCard(_ card: CashfreePGCoreSDK.CFCard) -> CashfreePGCoreSDK.CFCardPayment.CFCardPaymentBuilder
    @objc final public func savePaymentMethod(_ flag: Swift.Bool) -> CashfreePGCoreSDK.CFCardPayment.CFCardPaymentBuilder
    @objc final public func setSession(_ session: CashfreePGCoreSDK.CFSession) -> CashfreePGCoreSDK.CFCardPayment.CFCardPaymentBuilder
    @objc final public func build() throws -> CashfreePGCoreSDK.CFCardPayment
    @objc deinit
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc final public class CFWalletPayment : CashfreePGCoreSDK.CFPayment {
  @objc override final public func printDescription()
  @_inheritsConvenienceInitializers @objc final public class CFWalletPaymentBuilder : ObjectiveC.NSObject {
    @objc override dynamic public init()
    @objc final public func setSession(_ session: CashfreePGCoreSDK.CFSession) -> CashfreePGCoreSDK.CFWalletPayment.CFWalletPaymentBuilder
    @objc final public func setWallet(_ wallet: CashfreePGCoreSDK.CFWallet) -> CashfreePGCoreSDK.CFWalletPayment.CFWalletPaymentBuilder
    @objc final public func build() throws -> CashfreePGCoreSDK.CFWalletPayment
    @objc deinit
  }
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc final public class CFSession : ObjectiveC.NSObject {
  @objc final public func printDescription()
  @_inheritsConvenienceInitializers @objc final public class CFSessionBuilder : ObjectiveC.NSObject {
    @objc override dynamic public init()
    @objc final public func setOrderToken(_ token: Swift.String) -> CashfreePGCoreSDK.CFSession.CFSessionBuilder
    @objc final public func setOrderID(_ id: Swift.String) -> CashfreePGCoreSDK.CFSession.CFSessionBuilder
    @objc final public func setEnvironment(_ environment: CashfreePGCoreSDK.CFENVIRONMENT) -> CashfreePGCoreSDK.CFSession.CFSessionBuilder
    @objc final public func build() throws -> CashfreePGCoreSDK.CFSession
    @objc deinit
  }
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc final public class CFEMICard : ObjectiveC.NSObject {
  @objc final public func printDescription()
  @_inheritsConvenienceInitializers @objc final public class CFEMICardBuilder : ObjectiveC.NSObject {
    @objc override dynamic public init()
    @objc final public func setCardNumber(_ number: Swift.String) -> CashfreePGCoreSDK.CFEMICard.CFEMICardBuilder
    @objc final public func setCardHolderName(_ name: Swift.String) -> CashfreePGCoreSDK.CFEMICard.CFEMICardBuilder
    @objc final public func setCardExpiryMonth(_ month: Swift.String) -> CashfreePGCoreSDK.CFEMICard.CFEMICardBuilder
    @objc final public func setCardExpiryYear(_ year: Swift.String) -> CashfreePGCoreSDK.CFEMICard.CFEMICardBuilder
    @objc final public func setCVV(_ cvv: Swift.String) -> CashfreePGCoreSDK.CFEMICard.CFEMICardBuilder
    @objc final public func setBankName(_ bankName: Swift.String) -> CashfreePGCoreSDK.CFEMICard.CFEMICardBuilder
    @objc final public func setEMITenure(_ tenure: Swift.Int) -> CashfreePGCoreSDK.CFEMICard.CFEMICardBuilder
    @objc final public func build() throws -> CashfreePGCoreSDK.CFEMICard
    @objc deinit
  }
  @objc deinit
}
@objc public protocol CFCallbackDelegate : ObjectiveC.NSObjectProtocol {
}
@objc public protocol CFCardPaymentDelegate : CashfreePGCoreSDK.CFCallbackDelegate {
  @objc func initiatingCardPayment()
  @objc func presentWebForAuthenticatingCardPayment()
  @objc func cardPayment(didFinishExecutingWith error: CashfreePGCoreSDK.CFErrorResponse)
  @objc func verifyCardPaymentCompletion(for orderId: Swift.String)
}
@objc public protocol CFUPIPaymentDelegate : CashfreePGCoreSDK.CFCallbackDelegate {
  @objc func initiatingUPIPayment()
  @objc func presentWebForAuthenticatingUPIPaymentInSandBoxEnvironment()
  @objc func verifyUPIPaymentCompletion(for orderId: Swift.String)
  @objc func upiPayment(didFinishExecutingWith error: CashfreePGCoreSDK.CFErrorResponse)
}
@objc public protocol CFNetbankingPaymentDelegate : CashfreePGCoreSDK.CFCallbackDelegate {
  @objc func initiatingNetbankingPayment()
  @objc func presentWebForAuthenticatingNetbankingPayment()
  @objc func netbankingPayment(didFinishExecutingWith error: CashfreePGCoreSDK.CFErrorResponse)
  @objc func verifyNetbankingPaymentCompletion(for orderId: Swift.String)
}
@objc public protocol CFWalletPaymentDelegate : CashfreePGCoreSDK.CFCallbackDelegate {
  @objc func initiatingWalletPayment()
  @objc func presentWebForAuthenticatingWalletPayment()
  @objc func verifyWalletPaymentCompletion(for orderId: Swift.String)
  @objc func walletPayment(didFinishExecutingWith error: CashfreePGCoreSDK.CFErrorResponse)
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc final public class CFEMICardPayment : CashfreePGCoreSDK.CFPayment {
  @objc override final public func printDescription()
  @_inheritsConvenienceInitializers @objc public class CFEMICardPaymentBuilder : ObjectiveC.NSObject {
    @objc override dynamic public init()
    @objc public func setCard(_ card: CashfreePGCoreSDK.CFEMICard) -> CashfreePGCoreSDK.CFEMICardPayment.CFEMICardPaymentBuilder
    @objc public func savePaymentMethod(_ flag: Swift.Bool) -> CashfreePGCoreSDK.CFEMICardPayment.CFEMICardPaymentBuilder
    @objc public func setSession(_ session: CashfreePGCoreSDK.CFSession) -> CashfreePGCoreSDK.CFEMICardPayment.CFEMICardPaymentBuilder
    @objc public func build() throws -> CashfreePGCoreSDK.CFEMICardPayment
    @objc deinit
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class CFPayment : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc public func printDescription()
  @objc final public func setPlatform(_ platform: CashfreePGCoreSDK.CFPLATFORM)
  @objc deinit
}
@objc public enum CashfreeError : Swift.Int, Swift.Error {
  case APP_ID_MISSING
  case ORDER_TOKEN_MISSING
  case ORDER_ID_MISSING
  case ENVIRONMENT_MISSING
  case INVALID_ENVIRONMENT
  case CHANNEL_MISSING
  case CARD_NUMBER_MISSING
  case CARD_HOLDER_NAME_MISSING
  case CARD_EXPIRY_MONTH_MISSING
  case CARD_EXPIRY_YEAR_MISSING
  case CARD_CVV_MISSING
  case CARD_BANK_NAME_MISSING
  case CARD_EMI_TENURE_MISSING
  case UPI_ID_MISSING
  case INVALID_UPI_APP_ID_SENT
  case WALLET_CHANNEL_MISSING
  case WALLET_PHONE_MISSING
  case NB_BANK_CODE_MISSING
  case NB_BANK_NAME_MISSING
  case NB_BANK_IFSC_MISSING
  case NB_BANK_ACCOUNT_NUMBER_MISSING
  case PAYMENT_OBJECT_MISSING
  case INVALID_PAYMENT_OBJECT_SENT
  case SESSION_OBJECT_MISSING
  case CALLBACK_MISSING
  case CARD_OBJECT_MISSING
  case NETBANKING_OBJECT_MISSING
  case WALLET_OBJECT_MISSING
  case UPI_OBJECT_MISSING
  case WEB_VIEW_CALLBACK_MISSING
  case INVALID_WEB_DATA
  case INVALID_QRCODE_DATA
  case IMAGE_VIEW_CALLBACK_MISSING
  case MISSING_CALLBACK
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public static var _nsErrorDomain: Swift.String {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
extension CashfreePGCoreSDK.CashfreeError : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
  public var localizedDescription: Swift.String {
    get
  }
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc final public class CFNetbankingPayment : CashfreePGCoreSDK.CFPayment {
  @objc override final public func printDescription()
  @_inheritsConvenienceInitializers @objc final public class CFNetbankingPaymentBuilder : ObjectiveC.NSObject {
    @objc override dynamic public init()
    @objc final public func setSession(_ session: CashfreePGCoreSDK.CFSession) -> CashfreePGCoreSDK.CFNetbankingPayment.CFNetbankingPaymentBuilder
    @objc final public func setNetbanking(_ netbanking: CashfreePGCoreSDK.CFNetbanking) -> CashfreePGCoreSDK.CFNetbankingPayment.CFNetbankingPaymentBuilder
    @objc final public func build() throws -> CashfreePGCoreSDK.CFNetbankingPayment
    @objc deinit
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc final public class CFUPIPayment : CashfreePGCoreSDK.CFPayment {
  @objc override final public func printDescription()
  @_inheritsConvenienceInitializers @objc final public class CFUPIPaymentBuilder : ObjectiveC.NSObject {
    @objc override dynamic public init()
    @objc final public func setUPI(_ upi: CashfreePGCoreSDK.CFUPI) -> CashfreePGCoreSDK.CFUPIPayment.CFUPIPaymentBuilder
    @objc final public func setSession(_ session: CashfreePGCoreSDK.CFSession) -> CashfreePGCoreSDK.CFUPIPayment.CFUPIPaymentBuilder
    @objc final public func build() throws -> CashfreePGCoreSDK.CFUPIPayment
    @objc deinit
  }
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc final public class CFUPI : ObjectiveC.NSObject {
  @objc final public func printDescription()
  @_inheritsConvenienceInitializers @objc final public class CFUPIBuilder : ObjectiveC.NSObject {
    @objc override dynamic public init()
    @objc final public func setChannel(_ channel: CashfreePGCoreSDK.CFUPIMODE) -> CashfreePGCoreSDK.CFUPI.CFUPIBuilder
    @objc final public func setUpiId(_ id: Swift.String) -> CashfreePGCoreSDK.CFUPI.CFUPIBuilder
    final public func getUpiId() -> Swift.String
    final public func getChannel() -> CashfreePGCoreSDK.CFUPIMODE
    @objc final public func build() throws -> CashfreePGCoreSDK.CFUPI
    @objc deinit
  }
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc final public class CFWallet : ObjectiveC.NSObject {
  @_inheritsConvenienceInitializers @objc final public class CFWalletBuilder : ObjectiveC.NSObject {
    @objc override dynamic public init()
    @objc final public func setChannel(_ channel: Swift.String) -> CashfreePGCoreSDK.CFWallet.CFWalletBuilder
    @objc final public func setPhone(_ phone: Swift.String) -> CashfreePGCoreSDK.CFWallet.CFWalletBuilder
    @objc final public func build() throws -> CashfreePGCoreSDK.CFWallet
    @objc deinit
  }
  @objc deinit
}
@objc public enum CFENVIRONMENT : Swift.Int {
  case PRODUCTION
  case SANDBOX
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
extension CashfreePGCoreSDK.CFENVIRONMENT : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
@objc public enum CFPLATFORM : Swift.Int {
  case iOS
  case React_Native_iOS
  case Flutter_iOS
  case Capacitor_iOS
  case Xamarin_iOS
  case Cordova_iOS
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
extension CashfreePGCoreSDK.CFPLATFORM : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers @objc final public class CFCard : ObjectiveC.NSObject {
  @_inheritsConvenienceInitializers @objc final public class CFCardBuilder : ObjectiveC.NSObject {
    @objc override dynamic public init()
    @objc final public func setCardNumber(_ number: Swift.String) -> CashfreePGCoreSDK.CFCard.CFCardBuilder
    @objc final public func setCardHolderName(_ name: Swift.String) -> CashfreePGCoreSDK.CFCard.CFCardBuilder
    @objc final public func setCardExpiryMonth(_ month: Swift.String) -> CashfreePGCoreSDK.CFCard.CFCardBuilder
    @objc final public func setCardExpiryYear(_ year: Swift.String) -> CashfreePGCoreSDK.CFCard.CFCardBuilder
    @objc final public func setCVV(_ cvv: Swift.String) -> CashfreePGCoreSDK.CFCard.CFCardBuilder
    @objc final public func build() throws -> CashfreePGCoreSDK.CFCard
    @objc deinit
  }
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc final public class CFNetbanking : ObjectiveC.NSObject {
  @_inheritsConvenienceInitializers @objc final public class CFNetbankingBuilder : ObjectiveC.NSObject {
    @objc override dynamic public init()
    @objc final public func setBankCode(_ code: Swift.Int) -> CashfreePGCoreSDK.CFNetbanking.CFNetbankingBuilder
    @objc final public func build() throws -> CashfreePGCoreSDK.CFNetbanking
    @objc deinit
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class CFUPIUtils : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc public func getInstalledUPIApplications() -> [[Swift.String : Swift.String]]
  @objc deinit
}
@objc public enum CFUPIMODE : Swift.Int {
  case COLLECT
  case INTENT
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
extension CashfreePGCoreSDK.CFUPIMODE : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc final public class CFPaymentGatewayService : ObjectiveC.NSObject {
  @objc public static func getInstance() -> CashfreePGCoreSDK.CFPaymentGatewayService
  @objc final public func setCallback(_ callback: [CashfreePGCoreSDK.CFCallbackDelegate])
  @objc final public func doPayment(payment: CashfreePGCoreSDK.CFPayment) throws
  @objc final public func cancelPayment()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class CFErrorResponse : ObjectiveC.NSObject {
  public var status: Swift.String?
  public var message: Swift.String?
  public var code: Swift.String?
  public var type: Swift.String?
  public var orderId: Swift.String?
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class CFPaymentResponse : ObjectiveC.NSObject {
  public var orderAmount: Swift.String?
  public var orderId: Swift.String?
  public var paymentMode: Swift.String?
  public var referenceId: Swift.String?
  public var signature: Swift.String?
  public var txMsg: Swift.String?
  public var txStatus: Swift.String?
  public var txTime: Swift.String?
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(CFAnalytics) public class CFAnalytics : CoreData.NSManagedObject {
  @objc override dynamic public init(entity: CoreData.NSEntityDescription, insertInto context: CoreData.NSManagedObjectContext?)
  @objc deinit
}
extension CashfreePGCoreSDK.CFAnalytics {
  @nonobjc public class func fetchRequest() -> CoreData.NSFetchRequest<CashfreePGCoreSDK.CFAnalytics>
  @objc @NSManaged dynamic public var endTime: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var environment: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var meta_data: Foundation.Data? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var order_token: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var platform: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var sdk_version: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var startTime: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var timestamp: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var transaction_id: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var x_api_version: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var x_request_id: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var events: Foundation.NSOrderedSet? {
    @objc get
    @objc set
  }
}
extension CashfreePGCoreSDK.CFAnalytics {
  @objc(insertObject:inEventsAtIndex:) @NSManaged dynamic public func insertIntoEvents(_ value: CashfreePGCoreSDK.CFEvent, at idx: Swift.Int)
  @objc(removeObjectFromEventsAtIndex:) @NSManaged dynamic public func removeFromEvents(at idx: Swift.Int)
  @objc(insertEvents:atIndexes:) @NSManaged dynamic public func insertIntoEvents(_ values: [CashfreePGCoreSDK.CFEvent], at indexes: Foundation.NSIndexSet)
  @objc(removeEventsAtIndexes:) @NSManaged dynamic public func removeFromEvents(at indexes: Foundation.NSIndexSet)
  @objc(replaceObjectInEventsAtIndex:withObject:) @NSManaged dynamic public func replaceEvents(at idx: Swift.Int, with value: CashfreePGCoreSDK.CFEvent)
  @objc(replaceEventsAtIndexes:withEvents:) @NSManaged dynamic public func replaceEvents(at indexes: Foundation.NSIndexSet, with values: [CashfreePGCoreSDK.CFEvent])
  @objc(addEventsObject:) @NSManaged dynamic public func addToEvents(_ value: CashfreePGCoreSDK.CFEvent)
  @objc(removeEventsObject:) @NSManaged dynamic public func removeFromEvents(_ value: CashfreePGCoreSDK.CFEvent)
  @objc(addEvents:) @NSManaged dynamic public func addToEvents(_ values: Foundation.NSOrderedSet)
  @objc(removeEvents:) @NSManaged dynamic public func removeFromEvents(_ values: Foundation.NSOrderedSet)
}
@_inheritsConvenienceInitializers @objc(CFCrash) public class CFCrash : CoreData.NSManagedObject {
  @objc override dynamic public init(entity: CoreData.NSEntityDescription, insertInto context: CoreData.NSManagedObjectContext?)
  @objc deinit
}
extension CashfreePGCoreSDK.CFCrash {
  @nonobjc public class func fetchRequest() -> CoreData.NSFetchRequest<CashfreePGCoreSDK.CFCrash>
}
@_inheritsConvenienceInitializers @objc(CFEvent) public class CFEvent : CoreData.NSManagedObject {
  @objc override dynamic public init(entity: CoreData.NSEntityDescription, insertInto context: CoreData.NSManagedObjectContext?)
  @objc deinit
}
extension CashfreePGCoreSDK.CFEvent {
  @nonobjc public class func fetchRequest() -> CoreData.NSFetchRequest<CashfreePGCoreSDK.CFEvent>
  @objc @NSManaged dynamic public var callingObject: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var event_id: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var memoryUtilized: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var name: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var networkType: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var order_token: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var timeStamp: Swift.Int64 {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var transaction: CashfreePGCoreSDK.CFAnalytics? {
    @objc get
    @objc set
  }
}
extension CashfreePGCoreSDK.CashfreeError : Swift.Equatable {}
extension CashfreePGCoreSDK.CashfreeError : Swift.Hashable {}
extension CashfreePGCoreSDK.CashfreeError : Swift.RawRepresentable {}
extension CashfreePGCoreSDK.CFENVIRONMENT : Swift.Equatable {}
extension CashfreePGCoreSDK.CFENVIRONMENT : Swift.Hashable {}
extension CashfreePGCoreSDK.CFENVIRONMENT : Swift.RawRepresentable {}
extension CashfreePGCoreSDK.CFPLATFORM : Swift.Equatable {}
extension CashfreePGCoreSDK.CFPLATFORM : Swift.Hashable {}
extension CashfreePGCoreSDK.CFPLATFORM : Swift.RawRepresentable {}
extension CashfreePGCoreSDK.CFUPIMODE : Swift.Equatable {}
extension CashfreePGCoreSDK.CFUPIMODE : Swift.Hashable {}
extension CashfreePGCoreSDK.CFUPIMODE : Swift.RawRepresentable {}
