#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
#ifndef CASHFREEPGCORESDK_SWIFT_H
#define CASHFREEPGCORESDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="CashfreePGCoreSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


/// CFCard class consists of parameters required to make a card payment. CFCard object can be build using the <code>CFCardBuilder</code>. The CFCardBuilder class is embedded within the CFCard class and provides the users with setters to set the values of all the details that are required while making a card payment.
/// <h2>Code Snippet</h2>
/// \code
/// do {
///        let card = try CFCard.CFCardBuilder()
///            .setCardNumber("1234")
///            .setCardHolderName("Suhas")
///            .setCardExpiryYear("25")
///            .setCardExpiryMonth("12")
///            .setCVV("123")
///            .build()
///    } catch let e {
///        let error = e as! CashfreeError
///        print(error.localizedDescription)
///    }
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK6CFCard")
@interface CFCard : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;

/// This class provides builder methods that help in creating an object of <code>CFCard</code>
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK6CFCard13CFCardBuilder")
@interface CFCardBuilder : NSObject
/// No Argument Constructor. The method variables will be set using setters
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// The method sets the value of the card number to the CFCard Object.
/// \param number The card number has to be sent as the parameter in String format.
///
///
/// returns:
/// The method returns an instance of CFCardBuilder to continue building the CFCard object
- (CFCardBuilder * _Nonnull)setCardNumber:(NSString * _Nonnull)number SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the card holder’s name to the CFCard Object
/// \param name The card holders name has to be sent as the parameter.
///
///
/// returns:
/// The method returns an instance of CFCardBuilder to continue building the CFCard object
- (CFCardBuilder * _Nonnull)setCardHolderName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the card expiry month to the CFCard Object
/// \param month The card’s expiry month has to be sent as the parameter in “mm” format.
///
///
/// returns:
/// The method returns an instance of CFCardBuilder to continue building the CFCard object
- (CFCardBuilder * _Nonnull)setCardExpiryMonth:(NSString * _Nonnull)month SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the card expiry year to the CFCard Object
/// \param year The card’s expiry year has to be sent as the parameter in “yy” format.
///
///
/// returns:
/// The method returns an instance of CFCardBuilder to continue building the CFCard object
- (CFCardBuilder * _Nonnull)setCardExpiryYear:(NSString * _Nonnull)year SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the card cvv to the CFCard object
/// \param cvv The card’s cvv has to be sent as the parameter.
///
///
/// returns:
/// The method returns an instance of CFCardBuilder to continue building the CFCard object
- (CFCardBuilder * _Nonnull)setCVV:(NSString * _Nonnull)cvv SWIFT_WARN_UNUSED_RESULT;
/// This method builds an object of CFCard and returns the object to the user. This CFCard object will be used in initiating card payment.
///
/// throws:
/// An error is thrown in case the mandatory parameters are nil or empty.
///
/// returns:
/// The method returns an instance (object) of CFCard.
- (CFCard * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


/// CFPaymentObject is a parent class for all the payment objects (Card, Netbanking, Wallet, UPI)
SWIFT_CLASS("_TtC17CashfreePGCoreSDK9CFPayment")
@interface CFPayment : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)printDescription;
/// This method sets the platform that is being used when invoking the payment mode
/// \param platform It is of type string, by default it set to ios-el
///
- (void)setPlatform:(NSString * _Nonnull)platform;
@end


/// The CFCardPayment is a sub-class of CFPayment. An object of this class has to be created with the help of <em>CFCardPaymentBuilder</em> class and that object has to be sent to <code>CFPaymentGatewayService</code> while initiating the payment. An object of <code>CFCard</code>, <code>CFSession</code> for card payment are the class variables.
/// <h2>Code Snippet</h2>
/// \code
/// let cfSession = ...
/// let card = ...
/// let cardPaymentObject = try CFCardPayment.CFCardPaymentBuilder()
///     .setSession(cfSession)
///     .setCard(card)
///     .build()
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK13CFCardPayment")
@interface CFCardPayment : CFPayment
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)printDescription;
@end

@class CFSession;

/// The CFCardPaymentBuilder class can be used to create an object of CFCardPayment. It consists of setter methods to set the values for <em>CFCard</em>, <em>CFSession</em> . And finally a <em>build</em> method that returns an object of <em>CFCardPayment</em>.
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK13CFCardPayment20CFCardPaymentBuilder")
@interface CFCardPaymentBuilder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the value for CFCard variable of the CFCardPayment class
/// \param card It takes a parameter of type CFCard
///
///
/// returns:
/// It returns an instance of <em>CFCardPaymentBuilder</em> to continue the build process
- (CFCardPaymentBuilder * _Nonnull)setCard:(CFCard * _Nonnull)card SWIFT_WARN_UNUSED_RESULT;
/// This method is used to save the payment method that is being used, making it easier for future payments.
/// \param flag The method accepts a boolean value. By default it is set to “false”
///
///
/// returns:
/// It returns an instance of <em>CFCardPaymentBuilder</em> to continue the build process
- (CFCardPaymentBuilder * _Nonnull)savePaymentMethod:(BOOL)flag SWIFT_WARN_UNUSED_RESULT;
/// This method sets the value for CFSession variable of the CFCardPayment class
/// \param session It takes a parameter of type CFSession
///
///
/// returns:
/// It returns an instance of <em>CFCardPaymentBuilder</em> to continue the build process
- (CFCardPaymentBuilder * _Nonnull)setSession:(CFSession * _Nonnull)session SWIFT_WARN_UNUSED_RESULT;
/// This method builds an object of <em>CFCardPayment</em>
///
/// throws:
/// It throws an error (CashfreeError), in case <em>CFCard</em> or <em>CFSession</em> is not set.
///
/// returns:
/// It returns an object of <em>CFCardPayment</em>
- (CFCardPayment * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end

@protocol CFResponseDelegate;
@class UIViewController;

SWIFT_CLASS("_TtC17CashfreePGCoreSDK20CFCorePaymentService")
@interface CFCorePaymentService : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (CFCorePaymentService * _Nonnull)getInstance SWIFT_WARN_UNUSED_RESULT;
- (void)setCallback:(id <CFResponseDelegate> _Nonnull)callback;
- (BOOL)doPaymentWithPayment:(CFPayment * _Nonnull)payment viewController:(UIViewController * _Nonnull)viewController error:(NSError * _Nullable * _Nullable)error;
- (void)cancelPayment;
@end


/// CFEMICard class consists of parameters required to make a card payment. CFEMICard object can be build using the <code>CFEMICardBuilder</code>. The CFEMICardBuilder class is embedded within the CFEMICard class and provides the users with setters to set the values of all the details that are required while making a card payment.
/// <h2>Code Snippet</h2>
/// \code
/// do {
///        let card = try CFEMICard.CFEMICardBuilder()
///            .setChannel("moto")
///            .setCardNumber("1234")
///            .setCardHolderName("Suhas")
///            .setCardExpiryYear("25")
///            .setCardExpiryMonth("12")
///            .setCVV("123")
///            .setBankName("ICICI")
///            .setEMITenure(3)
///            .build()
///
///    } catch let e {
///        let error = e as! CashfreeError
///        print(error.localizedDescription)
///    }
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK9CFEMICard")
@interface CFEMICard : NSObject
- (void)printDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This class provides builder methods that help in creating an object of <code>CFEMICard</code>
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK9CFEMICard16CFEMICardBuilder")
@interface CFEMICardBuilder : NSObject
/// No Argument Constructor. The method variables will be set using setters
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// The method sets the value of the card number to the CFEMICard Object.
/// \param number The card number has to be sent as the parameter in String format.
///
///
/// returns:
/// The method returns an instance of CFEMICardBuilder to continue building the CFEMICard object
- (CFEMICardBuilder * _Nonnull)setCardNumber:(NSString * _Nonnull)number SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the card holder’s name to the CFEMICard Object
/// \param name The card holders name has to be sent as the parameter.
///
///
/// returns:
/// The method returns an instance of CFEMICardBuilder to continue building the CFEMICard object
- (CFEMICardBuilder * _Nonnull)setCardHolderName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the card expiry month to the CFEMICard Object
/// \param month The card’s expiry month has to be sent as the parameter in “mm” format.
///
///
/// returns:
/// The method returns an instance of CFEMICardBuilder to continue building the CFEMICard object
- (CFEMICardBuilder * _Nonnull)setCardExpiryMonth:(NSString * _Nonnull)month SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the card expiry year to the CFEMICard Object
/// \param year The card’s expiry year has to be sent as the parameter in “yy” format.
///
///
/// returns:
/// The method returns an instance of CFEMICardBuilder to continue building the CFEMICard object
- (CFEMICardBuilder * _Nonnull)setCardExpiryYear:(NSString * _Nonnull)year SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the card cvv to the CFEMICard object
/// \param cvv The card’s cvv has to be sent as the parameter.
///
///
/// returns:
/// The method returns an instance of CFEMICardBuilder to continue building the CFEMICard object
- (CFEMICardBuilder * _Nonnull)setCVV:(NSString * _Nonnull)cvv SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the bank name to the CFEMICard object
/// \param bankName The bank name has to be sent as the parameter
///
///
/// returns:
/// The method returns an instance of CFEMICardBuilder to continue building the CFEMICard object
- (CFEMICardBuilder * _Nonnull)setBankName:(NSString * _Nonnull)bankName SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the EMI Tenure to the CFEMICard object
/// \param tenure The number of months that the EMI has to be enabled has to be sent as the parameter
///
///
/// returns:
/// The method returns an instance of CFEMICardBuilder to continue building the CFEMICard object
- (CFEMICardBuilder * _Nonnull)setEMITenure:(NSInteger)tenure SWIFT_WARN_UNUSED_RESULT;
/// This method builds an object of CFEMICard and returns the object to the user. This CFEMICard object will be used in initiating card payment.
///
/// throws:
/// An error is thrown in case the mandatory parameters are nil or empty.
///
/// returns:
/// The method returns an instance (object) of CFEMICard.
- (CFEMICard * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


/// The CFEMICardPayment is a sub-class of CFPayment. An object of this class has to be created with the help of <em>CFEMICardPaymentBuilder</em> class and that object has to be sent to <code>CFPaymentGatewayService</code> while initiating the payment. An object of <code>CFEMICard</code>, <code>CFSession</code> for card payment are the class variables.
/// <h2>Code Snippet</h2>
/// \code
/// let cfSession = ...
/// let card = ...
/// let cardPaymentObject = try CFEMICardPayment.CFEMICardPaymentBuilder()
///     .setSession(cfSession)
///     .setCallback(self)
///     .build()
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK16CFEMICardPayment")
@interface CFEMICardPayment : CFPayment
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)printDescription;
@end


/// The CFEMICardPaymentBuilder class can be used to create an object of CFEMICardPayment. It consists of setter methods to set the values for <em>CFEMICard</em>, <em>CFSession</em>. And finally a <em>build</em> method that returns an object of <em>CFEMICardPayment</em>.
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK16CFEMICardPayment23CFEMICardPaymentBuilder")
@interface CFEMICardPaymentBuilder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the value for CFEMICard variable of the CFEMICardPayment class
/// \param card It takes a parameter of type CFEMICard
///
///
/// returns:
/// It returns an instance of <em>CFEMICardPaymentBuilder</em> to continue the build process
- (CFEMICardPaymentBuilder * _Nonnull)setCard:(CFEMICard * _Nonnull)card SWIFT_WARN_UNUSED_RESULT;
- (CFEMICardPaymentBuilder * _Nonnull)savePaymentMethod:(BOOL)flag SWIFT_WARN_UNUSED_RESULT;
/// This method sets the value for CFSession variable of the CFEMICardPayment class
/// \param session It takes a parameter of type CFSession
///
///
/// returns:
/// It returns an instance of <em>CFEMICardPaymentBuilder</em> to continue the build process
- (CFEMICardPaymentBuilder * _Nonnull)setSession:(CFSession * _Nonnull)session SWIFT_WARN_UNUSED_RESULT;
/// This method builds an object of <em>CFEMICardPayment</em>
///
/// throws:
/// It throws an error (CashfreeError), in case <em>CFEMICard</em> or <em>CFSession</em> is not set.
///
/// returns:
/// It returns an object of <em>CFEMICardPayment</em>
- (CFEMICardPayment * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, CFENVIRONMENT, open) {
  CFENVIRONMENTPRODUCTION = 0,
  CFENVIRONMENTSANDBOX = 1,
};


/// The CFErrorResponse class consists of class variables using which error codes and message can be sent back to the user in case of <em>Failed API</em> or <em>No Internet</em> or <em>Invalid Card Details</em> and more.
SWIFT_CLASS("_TtC17CashfreePGCoreSDK15CFErrorResponse")
@interface CFErrorResponse : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;
@class UIImage;

/// CFImageView inherits UIImageView. The user has to create a UIImageView and set the custom class to CFImageView (in case of storyboard UI creation) else use the below code snippet to create a image-view:-
/// <ul>
///   <li>
///     <h2>Code Snippet</h2>
///   </li>
/// </ul>
/// \code
/// var cashfreeImageView: CFImageView!
/// override func viewDidLoad() {
///     super.viewDidLoad()
///
///     .......
///
///     self.cashfreeImageView = CFImageView(frame: .zero)
///     self.cashfreeImageView.translatesAutoresizingMaskIntoConstraints = false
///     self.view.addSubview(cashfreeImageView)
///     self.cashfreeImageView.topAnchor.constraint(equalTo: view.topAnchor, constant: 0).isActive = true
///     self.cashfreeImageView.bottomAnchor.constraint(equalTo: view.bottomAnchor, constant: 0).isActive = true
///     self.cashfreeImageView.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 0).isActive = true
///     self.cashfreeImageView.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: 0).isActive = true
///
///     do {
///         try self.cashfreeImageView.loadQRCode()
///     } catch let e {
///         let error = e as! CashfreeError
///         print(error.localizedDescription)
///     }
/// }
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK11CFImageView")
@interface CFImageView : UIImageView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// This method generates the QRCode as an image and sets it to the image-view which can be scanned by any UPI app to make payment.
///
/// throws:
/// In case there is any error while generating the QRCode, this method throws an exception, so that the errors can be handled gracefully.
- (BOOL)loadQRCodeAndReturnError:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage SWIFT_UNAVAILABLE;
@end


/// This <em>CFNetbanking</em> class consists of all the parameters that are required to initiate payment using NetBanking payment mode. A CFNetbanking object can be build with the help of a <code>CFNetbankingBuilder</code> class that is embedded within the CFNetbanking class.
/// \code
/// do {
///     let netbanking = try CFNetbanking.CFNetbankingBuilder()
///         .setBankCode(3003)
///         .build()
/// } catch let e {
///    let error = e as! CashfreeError
///    print(error.localizedDescription)
/// }
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK12CFNetbanking")
@interface CFNetbanking : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// CFNetbankingBuilder class consists of all the setters that are needed to build an object of type <code>CFNetbanking</code>
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK12CFNetbanking19CFNetbankingBuilder")
@interface CFNetbankingBuilder : NSObject
/// No Argument constructor. All variables are set using builder-setters
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This methos sets the bank code (Visit https://dev.cashfree.com/payment-gateway/payments/netbanking for all the bank codes)
/// \param code A parameter of type Integer is taken as input, which is the bank code
///
///
/// returns:
/// It returns an instance of <em>CFNetbankingBuilder</em> to continue building the <em>CFNetbanking</em> object
- (CFNetbankingBuilder * _Nonnull)setBankCode:(NSInteger)code SWIFT_WARN_UNUSED_RESULT;
/// This method creates an object of CFNetbanking
///
/// throws:
/// In case there is any mandatory parameter missing, it throws an exception
///
/// returns:
/// The method returns an object of type <em>CFNetbanking</em> which can be used to initiate Netbanking payment mode.
- (CFNetbanking * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


/// The CFNetbankingPayment is a sub-class of CFPayment. An object of this class has to be created with the help of <em>CFNetbankingPaymentBuilder</em> class and that object has to be sent to <code>CFPaymentGatewayService</code> while initiating the payment. An object of <code>CFNetbanking</code>, <code>CFSession</code> for Netbanking payment are the class variables.
/// <h2>Code Snippet</h2>
/// \code
/// let cfSession = ...
/// let netbanking = ...
/// let netbankingPaymentObject = try CFNetbankingPayment.CFNetbankingPaymentBuilder()
///     .setSession(cfSession)
///     .setNetbanking(netbanking)
///     .build()
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK19CFNetbankingPayment")
@interface CFNetbankingPayment : CFPayment
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)printDescription;
@end


/// The CFNetbankingPaymentBuilder class can be used to create an object of CFNetbankingObject. It consists of setter methods to set the values for <em>CFNetbanking</em>, <em>CFSession</em>. And finally a <em>build</em> method that returns an object of <em>CFNetbankingPayment</em>.
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK19CFNetbankingPayment26CFNetbankingPaymentBuilder")
@interface CFNetbankingPaymentBuilder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the value for CFSession variable of the CFNetbankingPayment class
/// \param session It takes a parameter of type CFSession
///
///
/// returns:
/// It returns an instance of <em>CFNetbankingPaymentBuilder</em> to continue the build process
- (CFNetbankingPaymentBuilder * _Nonnull)setSession:(CFSession * _Nonnull)session SWIFT_WARN_UNUSED_RESULT;
/// This method sets the value for CFNetbanking variable of the CFNetbankingPayment class
/// \param netbanking It takes a parameter of type CFNetbanking
///
///
/// returns:
/// It returns an instance of <em>CFNetbankingPaymentBuilder</em> to continue the build process
- (CFNetbankingPaymentBuilder * _Nonnull)setNetbanking:(CFNetbanking * _Nonnull)netbanking SWIFT_WARN_UNUSED_RESULT;
/// This method builds an object of <em>CFNetbankingPayment</em>
///
/// throws:
/// It throws an error (CashfreeError), in case <em>CFNetbanking</em> or <em>CFSession</em> is not set.
///
/// returns:
/// It returns an object of <em>CFNetbankingPayment</em>
- (CFNetbankingPayment * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, CFPLATFORM, open) {
  CFPLATFORMIOS = 0,
  CFPLATFORMReact_Native_iOS = 1,
  CFPLATFORMFlutter_iOS = 2,
  CFPLATFORMCapacitor_iOS = 3,
  CFPLATFORMXamarin_iOS = 4,
  CFPLATFORMCordova_iOS = 5,
};


/// The <em>CFPaylater</em> consists of all the parameters that are required to initiate payment using Pay Later Payment mode. A CFPaylater object can be created with the help of <code>CFPaylater</code> class that is embedded within the CFPaylater class.
/// <h2>Code Snippet</h2>
/// \code
/// do {
///    let payLater = try CFPaylater.CFPaylater()
///        .setProvider("lazypay")
///        .setPhone("9999999999")
///        .build()
/// } catch let e {
///    let error = e as! CashfreeError
///    print(error.localizedDescription)
/// }
///
/// \endcodenote:
/// The value of provider can be any of  the following:
/// \code
///      * lazypay
///      * zestmoney
///      * olapostpaid
///      * kotak
///      * flexipay
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK10CFPaylater")
@interface CFPaylater : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The <em>CFPaylaterBuilder</em> class consists of all the setters that are needed to build an object of type <code>CFPaylater</code>
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK10CFPaylater17CFPaylaterBuilder")
@interface CFPaylaterBuilder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the value as to which wallet has to be used to make payment.
/// \param provider The parameter takes in a String and the value has to be the name of the paylater provider (<em>lazypay, zestmoney, olapostpaid, kotak, flexipay</em>)
///
///
/// returns:
/// It returns an instance of <em>CFPaylaterBuilder</em> to continue building the <em>CFPaylater</em> object
- (CFPaylaterBuilder * _Nonnull)setProvider:(NSString * _Nonnull)provider SWIFT_WARN_UNUSED_RESULT;
/// This method sets the phone number to authenticate the wallet account and make payment
/// \param phone The parameter takes in a String, which is the phone number.
///
///
/// returns:
/// It returns an instance of <em>CFPaylaterBuilder</em> to continue building the <em>CFPaylater</em> object
- (CFPaylaterBuilder * _Nonnull)setPhone:(NSString * _Nonnull)phone SWIFT_WARN_UNUSED_RESULT;
/// The method creates an object of <em>CFPaylater</em>
///
/// throws:
/// In case the mandatory parameters are empty, an exception gets thrown
///
/// returns:
/// It returns an object of <em>CFPaylater</em>
- (CFPaylater * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


/// The CFPaylaterPayment is a sub-class of CFPayment. An object of this class has to be created with the help of <em>CFPaylaterPaymentBuilder</em> class and that object has to be sent to <code>CFPaymentGatewayService</code> while initiating the payment. An object of <code>CFPaylater</code>, <code>CFSession</code> for Pay Later payment are the class variables.
/// <h2>Code Snippet</h2>
/// \code
/// let cfSession = ...
/// let payLater = ...
/// let cfWalletPaymentObject = try CFPaylaterPayment.CFPaylaterPaymentBuilder()
///     .setSession(cfSession)
///     .setPaylater(payLater)
///     .build()
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK17CFPaylaterPayment")
@interface CFPaylaterPayment : CFPayment
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)printDescription;
@end


/// The CFWalletPaymentBuilder class can be used to create an object of CFWalletPayment. It consists of setter methods to set the values for <em>CFWallet</em>, <em>CFSession</em>. And finally a <em>build</em> method that returns an object of <em>CFWalletPayment</em>.
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK17CFPaylaterPayment24CFPaylaterPaymentBuilder")
@interface CFPaylaterPaymentBuilder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the value for CFSession variable of the CFWalletPayment class
/// \param session It takes a parameter of type CFSession
///
///
/// returns:
/// It returns an instance of <em>CFWalletPaymentBuilder</em> to continue the build process
- (CFPaylaterPaymentBuilder * _Nonnull)setSession:(CFSession * _Nonnull)session SWIFT_WARN_UNUSED_RESULT;
/// This method sets the value for CFWallet variable of the CFWalletPayment class
/// \param wallet It takes a parameter of type CFWallet
///
///
/// returns:
/// It returns an instance of <em>CFWalletPaymentBuilder</em> to continue the build process
- (CFPaylaterPaymentBuilder * _Nonnull)setPaylater:(CFPaylater * _Nonnull)paylater SWIFT_WARN_UNUSED_RESULT;
/// This method builds an object of <em>CFWalletPayment</em>
///
/// throws:
/// It throws an error (CashfreeError), in case <em>CFWallet</em> or <em>CFSession</em> is not set.
///
/// returns:
/// It returns an object of <em>CFWalletPayment</em>
- (CFPaylaterPayment * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end



/// The CFErrorResponse class consists of class variables using which error codes and message can be sent back to the user in case of <em>Failed API</em> or <em>No Internet</em> or <em>Invalid Card Details</em> and more.
SWIFT_CLASS("_TtC17CashfreePGCoreSDK17CFPaymentResponse")
@interface CFPaymentResponse : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The CFQRCodePayment is a sub-class of CFPayment. An object of this class has to be created with the help of <em>CFQRCodePaymentBuilder</em> class and that object has to be sent to <code>CFPaymentGatewayService</code> while initiating the payment. An object of<code>CFSession</code>  for QRCode payment are the class variables.
/// <h2>Code Snippet</h2>
/// \code
/// let cfSession = ...
/// let wallet = ...
/// let qrCodePaymentObject = try CFQRCodePayment.CFQRCodePaymentBuilder()
///     .setSession(cfSession)
///     .build()
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK15CFQRCodePayment")
@interface CFQRCodePayment : CFPayment
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)printDescription;
@end


/// The CFQRCodePaymentBuilder class can be used to create an object of CFQRCodePayment. It consists of setter methods to set the values for <em>CFSession</em> . And finally a <em>build</em> method that returns an object of <em>CFQRCodePayment</em>.
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK15CFQRCodePayment22CFQRCodePaymentBuilder")
@interface CFQRCodePaymentBuilder : NSObject
/// No Argument Constructor
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP17CashfreePGCoreSDK18CFResponseDelegate_")
@protocol CFResponseDelegate
- (void)onError:(CFErrorResponse * _Nonnull)error order_id:(NSString * _Nonnull)order_id;
- (void)verifyPaymentWithOrder_id:(NSString * _Nonnull)order_id;
@optional
- (void)loadQRAndVerifyPaymentWithBase64:(NSString * _Nonnull)base64 order_id:(NSString * _Nonnull)order_id;
@end


/// The CFSession class wiith the help of CFSessionBuilder class helps in gathering mandatory information to initiate a payment session. The CFSession object can be built with the of <code>CFSessionBuilder</code> which is a class embedded inside the CFSession class.
/// note:
/// In case the mandatory variables are empty or null, custom errors adhering to Error protocol will be thrown, which can be used to handle the errors gracefully.
/// <h2>Code Snippet</h2>
/// \code
/// do {
///     let cfSession = try CFSession.CFSessionBuilder()
///     .setOrderToken("order_token")
///     .setEnvironment(.SANDBOX)
///     .setOrderId("order_id")
///     .build()
/// } catch let e {
///     let error = e as! CashfreeError
///     print(error.localizedDescription)
/// }
///
/// \endcodenote:
/// The “order_token” is used to authenticate the payment requests made from SDK. It has to be generated for every payment attempt made for an order. Pass this token to the SDK while initiating the payment for that order. For generating a “order_token” you need to use our order creation API. The below code snippet is an example JSON that has to be used to generate the “order_token”
/// <h2>Code Snippet</h2>
/// \code
/// {
///     "order_amount": 1.00,
///     "order_currency": "INR",
///     "order_id": "order_12341234"
///     "customer_details": {
///         "customer_id": "customer_id",
///         "customer_name": "Customer Name",
///         "customer_email": "customeremail@example.com",
///         "customer_phone": "customer phone"
///     },
///     "order_meta": {
///         "notify_url": "https://cashfree.com"
///     },
///     "order_note": "some order note here"
/// }
///
/// \endcode<ul>
///   <li>
///     The above JSON has to be sent as body of the request to the end-point “https://prod.cashfree.com/pgnextgenapi-test/api/v1/orders”. The request should also consist of headers, which are as follows :-
///   </li>
/// </ul>
/// \code
/// Content-Type:application/json
/// X-client-id:{{apiKey}}
/// X-client-secret:{{apiSecret}}
/// x-api-version:2021-05-21
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK9CFSession")
@interface CFSession : NSObject
- (void)printDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This class provides builder methods that help in creating an object of <code>CFSession</code>
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK9CFSession16CFSessionBuilder")
@interface CFSessionBuilder : NSObject
/// No Arguments Constructor
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// The method sets the value of the generated token to the CFSession Object (The order creation should be strictly a server to server call)
/// \param token Send the token that is generated. The token consists of the entire order details.
///
///
/// returns:
/// The method returns an instance of CFSessionBuilder to continue building the CFSession object
- (CFSessionBuilder * _Nonnull)setOrderToken:(NSString * _Nonnull)token SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the Order Id to the CFSession Object (The order creation should be strictly a server to server call)
/// \param token Send the Order Id of the order under process.
///
///
/// returns:
/// The method returns an instance of CFSessionBuilder to continue building the CFSession object
- (CFSessionBuilder * _Nonnull)setOrderID:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the environment in which the payment has to be executed
/// \param environment The value of the environment can be either SANDBOX or PRODUCTION depending on the environment the payment has to be executed
///
///
/// returns:
/// The method returns an instance of CFSessionBuilder to continue building the CFSession object
- (CFSessionBuilder * _Nonnull)setEnvironment:(enum CFENVIRONMENT)environment SWIFT_WARN_UNUSED_RESULT;
/// The method validates the input, to check if the inputs are either nil or empty
///
/// throws:
/// In case of validation failure, a custom error adhering to Error protocol is thrown.
///
/// returns:
/// The method returns a CFSession Object, which has to be used further in the integration process
- (CFSession * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


/// The CFUPI class is used to set the upi_vpa or the upi_id that can be used to initiate payment using UPI Collect or UPI Intent. With the help of <code>CFUPIBuilder</code> Class, an object of CFUPI can be built and this object can be further used to initiate the payment.
/// <h2>Code Snippet</h2>
/// \code
/// do {
///    let cfUPICollect = try CFUPI.CFUPIBuilder()
///        .setChannel(.COLLECT)
///        .setUpiId("test@gocashfree")
///        .build()
/// } catch let e {
///    let error = e as! CashfreeError
///    print(error.localisedDescription)
/// }
///
/// \endcode\code
/// * Note: If you are integrating *UPI Collect* flow:
///             
///     * The parameter of setChannel() has to be set to .COLLECT
///     * The value of setUpiId() has to contain the "upi_vpa" value (for instance:- "9999999999@ybl")
///
/// * Note: If you are integrating *UPI Intent* flow (making payment using installed UPI applications):-
///             
///     * Get the list of installed UPI applications by using CFConfiguration().getInstalledUPIApplications() and build the User Interface.
///     * The above method returns an array of object, with each object consisting of three key value pairs (id, displayName, icon).
///     * The parameter of setChannel() has to be set to .INTENT
///     * The parameter of setUpiId() has to contain the id(mentioned above) of the clicked application which is part of the list retrieved.
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK5CFUPI")
@interface CFUPI : NSObject
- (void)printDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum CFUPIMODE : NSInteger;

/// The <em>CFUPIBuilder</em> class consists of all the setter methods required to create an object of <code>CFUPI</code>
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK5CFUPI12CFUPIBuilder")
@interface CFUPIBuilder : NSObject
/// No Argument Constructor
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the channel, which initiates the payment in a particular mde
/// \param channel The parameter takes in a String and sets the value of the channel.
///
///
/// returns:
/// It returns an instance of <em>CFUPIBuilder</em> to further continue building an object of <em>CFUPI</em>
- (CFUPIBuilder * _Nonnull)setChannel:(enum CFUPIMODE)channel SWIFT_WARN_UNUSED_RESULT;
/// This method sets the UPI ID of the user in case of UPI Collect flow or the UPI application that has to be launched in case of UPI Intent flow to which the payment notification gets triggered.
/// \param id It is of type String and the <em>upi_vpa</em> value or the <em>id</em> of the installed application has to be sent as the value to this id
///
///
/// returns:
/// It returns an instance of <em>CFUPIBuilder</em> to further continue building an object of <em>CFUPI</em>
- (CFUPIBuilder * _Nonnull)setUPIID:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
/// This methods creates an object of CFUPICollect by setting the value of channel and upi_id and returns the object back to the calling method
///
/// throws:
/// In case the value is null or empty an Error (CashfreeError.UPI_ID_MSSING) is thrown and the exception can be handled gracefullt
///
/// returns:
/// It returns an object of CFUPICollect which can be used to Initiate the CFUPICollect Payment Mode
- (CFUPI * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, CFUPIMODE, open) {
  CFUPIMODECOLLECT = 0,
  CFUPIMODEINTENT = 1,
};


/// The CFUPIPayment is a sub-class of CFPayment. An object of this class has to be created with the help of <em>CFUPIPaymentBuilder</em> class and that object has to be sent to <code>CFPaymentGatewayService</code> while initiating the payment. An object of <code>CFUPI</code>, <code>CFSession</code>  for UPI payment are the class variables.
/// <h2>Code Snippet</h2>
/// \code
/// let cfSession = ...
/// let cfUPICollect = ...
/// let cfUPIPaymentObject = try CFUPIPayment.CFUPIPaymentBuilder()
///     .setSession(cfSession)
///     .setUPI(cfUPICollect)
///     .build()
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK12CFUPIPayment")
@interface CFUPIPayment : CFPayment
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)printDescription;
@end


/// The CFUPIPaymentBuilder class can be used to create an object of CFUPIPayment. It consists of setter methods to set the values for <em>CFUPI</em>, <em>CFSession</em>. And finally a <em>build</em> method that returns an object of <em>CFUPIPayment</em>.
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK12CFUPIPayment19CFUPIPaymentBuilder")
@interface CFUPIPaymentBuilder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the value for CFUPI variable of the CFUPIPayment class
/// \param upi It takes a parameter of type CFUPI
///
///
/// returns:
/// It returns an instance of <em>CFUPIPaymentBuilder</em> to continue the build process
- (CFUPIPaymentBuilder * _Nonnull)setUPI:(CFUPI * _Nonnull)upi SWIFT_WARN_UNUSED_RESULT;
/// This method sets the value for CFSession variable of the CFUPIPayment class
/// \param session It takes a parameter of type CFSession
///
///
/// returns:
/// It returns an instance of <em>CFUPIPaymentBuilder</em> to continue the build process
- (CFUPIPaymentBuilder * _Nonnull)setSession:(CFSession * _Nonnull)session SWIFT_WARN_UNUSED_RESULT;
/// This method builds an object of <em>CFUPIPayment</em>
///
/// throws:
/// It throws an error (CashfreeError), in case <em>CFUPI</em> or <em>CFSession</em> is not set.
///
/// returns:
/// It returns an object of <em>CFUPIPayment</em>
- (CFUPIPayment * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


/// <em>CFUPIUtils</em> class helps in getting any configurations that are needed prior to making the payment page. One such example is getting the list of all the installed UPI applications from the user’s phone. The class provides a method called <code>CFUPIUtils().getInstalledUPIApplications()</code> which sends back a list of UPI applications installed in the user’s phone.
/// note:
/// Add the following permissions to info.plist file
/// \code
///  <key>LSApplicationCategoryType</key>
///  <string></string>
///  <key>LSApplicationQueriesSchemes</key>
///  <array>
///      <string>bhim</string>
///      <string>paytm</string>
///      <string>phonepe</string>
///      <string>tez</string>
///  </array>
///
/// \endcode<ul>
///   <li>
///     <h2>Code Snippet</h2>
///   </li>
/// </ul>
/// \code
/// let installedApps = CFUPIUtils().getInstalledUPIApplications()
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK10CFUPIUtils")
@interface CFUPIUtils : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method returns list of installed UPI applications in the user’s phone
///
/// returns:
/// An array of dictionary ([String: String]) is returned. Each object consists of “displayName”, “id” and “icon” as the keys with respective values in string format.
- (NSArray<NSDictionary<NSString *, NSString *> *> * _Nonnull)getInstalledUPIApplications SWIFT_WARN_UNUSED_RESULT;
@end


/// The <em>CFWallet</em> consists of all the parameters that are required to initiate payment using Wallet Payment mode. A CFWallet object can be created with the help of <code>CFWalletBuilder</code> class that is embedded within the CFWallet class.
/// <h2>Code Snippet</h2>
/// \code
/// do {
///    let wallet = try CFWallet.CFWalletBuilder()
///        .setProvider("phonepe")
///        .setPhone("9999999999")
///        .build()
/// } catch let e {
///    let error = e as! CashfreeError
///    print(error.localizedDescription)
/// }
///
/// \endcodenote:
/// The value of provider can be any of  the following:
/// \code
///      * phonepe
///      * paytm
///      * amazon
///      * airtel
///      * freecharge
///      * mobikwik
///      * jio
///      * ola
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK8CFWallet")
@interface CFWallet : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The <em>CFWalletBuilder</em> class consists of all the setters that are needed to build an object of type <code>CFWallet</code>
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK8CFWallet15CFWalletBuilder")
@interface CFWalletBuilder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the value as to which wallet has to be used to make payment.
/// \param provider The parameter takes in a String and the value has to be the name of the wallet (<em>gpay,phonepe,paytm,amazon,airtel,freecharge,mobikwik,jio,ola</em>)
///
///
/// returns:
/// It returns an instance of <em>CFWalletBuilder</em> to continue building the <em>CFWallet</em> object
- (CFWalletBuilder * _Nonnull)setProvider:(NSString * _Nonnull)provider SWIFT_WARN_UNUSED_RESULT;
/// This method sets the phone number to authenticate the wallet account and make payment
/// \param phone The parameter takes in a String, which is the phone number.
///
///
/// returns:
/// It returns an instance of <em>CFWalletBuilder</em> to continue building the <em>CFWallet</em> object
- (CFWalletBuilder * _Nonnull)setPhone:(NSString * _Nonnull)phone SWIFT_WARN_UNUSED_RESULT;
/// The method creates an object of <em>CFWallet</em>
///
/// throws:
/// In case the mandatory parameters are empty, an exception gets thrown
///
/// returns:
/// It returns an object of <em>CFWallet</em>
- (CFWallet * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


/// The CFWalletPayment is a sub-class of CFPayment. An object of this class has to be created with the help of <em>CFWalletPaymentBuilder</em> class and that object has to be sent to <code>CFPaymentGatewayService</code> while initiating the payment. An object of <code>CFWallet</code>, <code>CFSession</code> for Netbanking payment are the class variables.
/// <h2>Code Snippet</h2>
/// \code
/// let cfSession = ...
/// let wallet = ...
/// let cfWalletPaymentObject = try CFWalletPayment.CFWalletPaymentBuilder()
///     .setSession(cfSession)
///     .setWallet(wallet)
///     .build()
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK15CFWalletPayment")
@interface CFWalletPayment : CFPayment
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)printDescription;
@end


/// The CFWalletPaymentBuilder class can be used to create an object of CFWalletPayment. It consists of setter methods to set the values for <em>CFWallet</em>, <em>CFSession</em>. And finally a <em>build</em> method that returns an object of <em>CFWalletPayment</em>.
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK15CFWalletPayment22CFWalletPaymentBuilder")
@interface CFWalletPaymentBuilder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the value for CFSession variable of the CFWalletPayment class
/// \param session It takes a parameter of type CFSession
///
///
/// returns:
/// It returns an instance of <em>CFWalletPaymentBuilder</em> to continue the build process
- (CFWalletPaymentBuilder * _Nonnull)setSession:(CFSession * _Nonnull)session SWIFT_WARN_UNUSED_RESULT;
/// This method sets the value for CFWallet variable of the CFWalletPayment class
/// \param wallet It takes a parameter of type CFWallet
///
///
/// returns:
/// It returns an instance of <em>CFWalletPaymentBuilder</em> to continue the build process
- (CFWalletPaymentBuilder * _Nonnull)setWallet:(CFWallet * _Nonnull)wallet SWIFT_WARN_UNUSED_RESULT;
/// This method builds an object of <em>CFWalletPayment</em>
///
/// throws:
/// It throws an error (CashfreeError), in case <em>CFWallet</em> or <em>CFSession</em> is not set.
///
/// returns:
/// It returns an object of <em>CFWalletPayment</em>
- (CFWalletPayment * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, CashfreeError, open) {
  CashfreeErrorAPP_ID_MISSING = 0,
  CashfreeErrorORDER_TOKEN_MISSING = 1,
  CashfreeErrorORDER_ID_MISSING = 2,
  CashfreeErrorENVIRONMENT_MISSING = 3,
  CashfreeErrorINVALID_ENVIRONMENT = 4,
  CashfreeErrorCHANNEL_MISSING = 5,
  CashfreeErrorCARD_NUMBER_MISSING = 6,
  CashfreeErrorCARD_HOLDER_NAME_MISSING = 7,
  CashfreeErrorCARD_EXPIRY_MONTH_MISSING = 8,
  CashfreeErrorCARD_EXPIRY_YEAR_MISSING = 9,
  CashfreeErrorCARD_CVV_MISSING = 10,
  CashfreeErrorCARD_BANK_NAME_MISSING = 11,
  CashfreeErrorCARD_EMI_TENURE_MISSING = 12,
  CashfreeErrorUPI_ID_MISSING = 13,
  CashfreeErrorINVALID_UPI_APP_ID_SENT = 14,
  CashfreeErrorPROVIDER_MISSING = 15,
  CashfreeErrorPHONE_NUMBER_MISSING = 16,
  CashfreeErrorNB_BANK_CODE_MISSING = 17,
  CashfreeErrorNB_BANK_NAME_MISSING = 18,
  CashfreeErrorNB_BANK_IFSC_MISSING = 19,
  CashfreeErrorNB_BANK_ACCOUNT_NUMBER_MISSING = 20,
  CashfreeErrorPAYMENT_OBJECT_MISSING = 21,
  CashfreeErrorINVALID_PAYMENT_OBJECT_SENT = 22,
  CashfreeErrorSESSION_OBJECT_MISSING = 23,
  CashfreeErrorCALLBACK_MISSING = 24,
  CashfreeErrorCARD_OBJECT_MISSING = 25,
  CashfreeErrorNETBANKING_OBJECT_MISSING = 26,
  CashfreeErrorWALLET_OBJECT_MISSING = 27,
  CashfreeErrorPAYLATER_OBJECT_MISSING = 28,
  CashfreeErrorUPI_OBJECT_MISSING = 29,
  CashfreeErrorWEB_VIEW_CALLBACK_MISSING = 30,
  CashfreeErrorINVALID_WEB_DATA = 31,
  CashfreeErrorINVALID_QRCODE_DATA = 32,
  CashfreeErrorIMAGE_VIEW_CALLBACK_MISSING = 33,
  CashfreeErrorMISSING_CALLBACK = 34,
  CashfreeErrorMISSING_VIEW_CONTROLLER_INSTANCE = 35,
  CashfreeErrorHEX_SHOULD_START_WITH = 36,
  CashfreeErrorCOMPONENTS_MISSING = 37,
  CashfreeErrorONE_PAYMENT_COMPONENT_SHOULD_BE_PRESENT = 38,
};
static NSString * _Nonnull const CashfreeErrorDomain = @"CashfreePGCoreSDK.CashfreeError";


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
#ifndef CASHFREEPGCORESDK_SWIFT_H
#define CASHFREEPGCORESDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="CashfreePGCoreSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


/// CFCard class consists of parameters required to make a card payment. CFCard object can be build using the <code>CFCardBuilder</code>. The CFCardBuilder class is embedded within the CFCard class and provides the users with setters to set the values of all the details that are required while making a card payment.
/// <h2>Code Snippet</h2>
/// \code
/// do {
///        let card = try CFCard.CFCardBuilder()
///            .setCardNumber("1234")
///            .setCardHolderName("Suhas")
///            .setCardExpiryYear("25")
///            .setCardExpiryMonth("12")
///            .setCVV("123")
///            .build()
///    } catch let e {
///        let error = e as! CashfreeError
///        print(error.localizedDescription)
///    }
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK6CFCard")
@interface CFCard : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;

/// This class provides builder methods that help in creating an object of <code>CFCard</code>
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK6CFCard13CFCardBuilder")
@interface CFCardBuilder : NSObject
/// No Argument Constructor. The method variables will be set using setters
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// The method sets the value of the card number to the CFCard Object.
/// \param number The card number has to be sent as the parameter in String format.
///
///
/// returns:
/// The method returns an instance of CFCardBuilder to continue building the CFCard object
- (CFCardBuilder * _Nonnull)setCardNumber:(NSString * _Nonnull)number SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the card holder’s name to the CFCard Object
/// \param name The card holders name has to be sent as the parameter.
///
///
/// returns:
/// The method returns an instance of CFCardBuilder to continue building the CFCard object
- (CFCardBuilder * _Nonnull)setCardHolderName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the card expiry month to the CFCard Object
/// \param month The card’s expiry month has to be sent as the parameter in “mm” format.
///
///
/// returns:
/// The method returns an instance of CFCardBuilder to continue building the CFCard object
- (CFCardBuilder * _Nonnull)setCardExpiryMonth:(NSString * _Nonnull)month SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the card expiry year to the CFCard Object
/// \param year The card’s expiry year has to be sent as the parameter in “yy” format.
///
///
/// returns:
/// The method returns an instance of CFCardBuilder to continue building the CFCard object
- (CFCardBuilder * _Nonnull)setCardExpiryYear:(NSString * _Nonnull)year SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the card cvv to the CFCard object
/// \param cvv The card’s cvv has to be sent as the parameter.
///
///
/// returns:
/// The method returns an instance of CFCardBuilder to continue building the CFCard object
- (CFCardBuilder * _Nonnull)setCVV:(NSString * _Nonnull)cvv SWIFT_WARN_UNUSED_RESULT;
/// This method builds an object of CFCard and returns the object to the user. This CFCard object will be used in initiating card payment.
///
/// throws:
/// An error is thrown in case the mandatory parameters are nil or empty.
///
/// returns:
/// The method returns an instance (object) of CFCard.
- (CFCard * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


/// CFPaymentObject is a parent class for all the payment objects (Card, Netbanking, Wallet, UPI)
SWIFT_CLASS("_TtC17CashfreePGCoreSDK9CFPayment")
@interface CFPayment : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)printDescription;
/// This method sets the platform that is being used when invoking the payment mode
/// \param platform It is of type string, by default it set to ios-el
///
- (void)setPlatform:(NSString * _Nonnull)platform;
@end


/// The CFCardPayment is a sub-class of CFPayment. An object of this class has to be created with the help of <em>CFCardPaymentBuilder</em> class and that object has to be sent to <code>CFPaymentGatewayService</code> while initiating the payment. An object of <code>CFCard</code>, <code>CFSession</code> for card payment are the class variables.
/// <h2>Code Snippet</h2>
/// \code
/// let cfSession = ...
/// let card = ...
/// let cardPaymentObject = try CFCardPayment.CFCardPaymentBuilder()
///     .setSession(cfSession)
///     .setCard(card)
///     .build()
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK13CFCardPayment")
@interface CFCardPayment : CFPayment
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)printDescription;
@end

@class CFSession;

/// The CFCardPaymentBuilder class can be used to create an object of CFCardPayment. It consists of setter methods to set the values for <em>CFCard</em>, <em>CFSession</em> . And finally a <em>build</em> method that returns an object of <em>CFCardPayment</em>.
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK13CFCardPayment20CFCardPaymentBuilder")
@interface CFCardPaymentBuilder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the value for CFCard variable of the CFCardPayment class
/// \param card It takes a parameter of type CFCard
///
///
/// returns:
/// It returns an instance of <em>CFCardPaymentBuilder</em> to continue the build process
- (CFCardPaymentBuilder * _Nonnull)setCard:(CFCard * _Nonnull)card SWIFT_WARN_UNUSED_RESULT;
/// This method is used to save the payment method that is being used, making it easier for future payments.
/// \param flag The method accepts a boolean value. By default it is set to “false”
///
///
/// returns:
/// It returns an instance of <em>CFCardPaymentBuilder</em> to continue the build process
- (CFCardPaymentBuilder * _Nonnull)savePaymentMethod:(BOOL)flag SWIFT_WARN_UNUSED_RESULT;
/// This method sets the value for CFSession variable of the CFCardPayment class
/// \param session It takes a parameter of type CFSession
///
///
/// returns:
/// It returns an instance of <em>CFCardPaymentBuilder</em> to continue the build process
- (CFCardPaymentBuilder * _Nonnull)setSession:(CFSession * _Nonnull)session SWIFT_WARN_UNUSED_RESULT;
/// This method builds an object of <em>CFCardPayment</em>
///
/// throws:
/// It throws an error (CashfreeError), in case <em>CFCard</em> or <em>CFSession</em> is not set.
///
/// returns:
/// It returns an object of <em>CFCardPayment</em>
- (CFCardPayment * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end

@protocol CFResponseDelegate;
@class UIViewController;

SWIFT_CLASS("_TtC17CashfreePGCoreSDK20CFCorePaymentService")
@interface CFCorePaymentService : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (CFCorePaymentService * _Nonnull)getInstance SWIFT_WARN_UNUSED_RESULT;
- (void)setCallback:(id <CFResponseDelegate> _Nonnull)callback;
- (BOOL)doPaymentWithPayment:(CFPayment * _Nonnull)payment viewController:(UIViewController * _Nonnull)viewController error:(NSError * _Nullable * _Nullable)error;
- (void)cancelPayment;
@end


/// CFEMICard class consists of parameters required to make a card payment. CFEMICard object can be build using the <code>CFEMICardBuilder</code>. The CFEMICardBuilder class is embedded within the CFEMICard class and provides the users with setters to set the values of all the details that are required while making a card payment.
/// <h2>Code Snippet</h2>
/// \code
/// do {
///        let card = try CFEMICard.CFEMICardBuilder()
///            .setChannel("moto")
///            .setCardNumber("1234")
///            .setCardHolderName("Suhas")
///            .setCardExpiryYear("25")
///            .setCardExpiryMonth("12")
///            .setCVV("123")
///            .setBankName("ICICI")
///            .setEMITenure(3)
///            .build()
///
///    } catch let e {
///        let error = e as! CashfreeError
///        print(error.localizedDescription)
///    }
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK9CFEMICard")
@interface CFEMICard : NSObject
- (void)printDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This class provides builder methods that help in creating an object of <code>CFEMICard</code>
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK9CFEMICard16CFEMICardBuilder")
@interface CFEMICardBuilder : NSObject
/// No Argument Constructor. The method variables will be set using setters
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// The method sets the value of the card number to the CFEMICard Object.
/// \param number The card number has to be sent as the parameter in String format.
///
///
/// returns:
/// The method returns an instance of CFEMICardBuilder to continue building the CFEMICard object
- (CFEMICardBuilder * _Nonnull)setCardNumber:(NSString * _Nonnull)number SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the card holder’s name to the CFEMICard Object
/// \param name The card holders name has to be sent as the parameter.
///
///
/// returns:
/// The method returns an instance of CFEMICardBuilder to continue building the CFEMICard object
- (CFEMICardBuilder * _Nonnull)setCardHolderName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the card expiry month to the CFEMICard Object
/// \param month The card’s expiry month has to be sent as the parameter in “mm” format.
///
///
/// returns:
/// The method returns an instance of CFEMICardBuilder to continue building the CFEMICard object
- (CFEMICardBuilder * _Nonnull)setCardExpiryMonth:(NSString * _Nonnull)month SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the card expiry year to the CFEMICard Object
/// \param year The card’s expiry year has to be sent as the parameter in “yy” format.
///
///
/// returns:
/// The method returns an instance of CFEMICardBuilder to continue building the CFEMICard object
- (CFEMICardBuilder * _Nonnull)setCardExpiryYear:(NSString * _Nonnull)year SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the card cvv to the CFEMICard object
/// \param cvv The card’s cvv has to be sent as the parameter.
///
///
/// returns:
/// The method returns an instance of CFEMICardBuilder to continue building the CFEMICard object
- (CFEMICardBuilder * _Nonnull)setCVV:(NSString * _Nonnull)cvv SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the bank name to the CFEMICard object
/// \param bankName The bank name has to be sent as the parameter
///
///
/// returns:
/// The method returns an instance of CFEMICardBuilder to continue building the CFEMICard object
- (CFEMICardBuilder * _Nonnull)setBankName:(NSString * _Nonnull)bankName SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the EMI Tenure to the CFEMICard object
/// \param tenure The number of months that the EMI has to be enabled has to be sent as the parameter
///
///
/// returns:
/// The method returns an instance of CFEMICardBuilder to continue building the CFEMICard object
- (CFEMICardBuilder * _Nonnull)setEMITenure:(NSInteger)tenure SWIFT_WARN_UNUSED_RESULT;
/// This method builds an object of CFEMICard and returns the object to the user. This CFEMICard object will be used in initiating card payment.
///
/// throws:
/// An error is thrown in case the mandatory parameters are nil or empty.
///
/// returns:
/// The method returns an instance (object) of CFEMICard.
- (CFEMICard * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


/// The CFEMICardPayment is a sub-class of CFPayment. An object of this class has to be created with the help of <em>CFEMICardPaymentBuilder</em> class and that object has to be sent to <code>CFPaymentGatewayService</code> while initiating the payment. An object of <code>CFEMICard</code>, <code>CFSession</code> for card payment are the class variables.
/// <h2>Code Snippet</h2>
/// \code
/// let cfSession = ...
/// let card = ...
/// let cardPaymentObject = try CFEMICardPayment.CFEMICardPaymentBuilder()
///     .setSession(cfSession)
///     .setCallback(self)
///     .build()
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK16CFEMICardPayment")
@interface CFEMICardPayment : CFPayment
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)printDescription;
@end


/// The CFEMICardPaymentBuilder class can be used to create an object of CFEMICardPayment. It consists of setter methods to set the values for <em>CFEMICard</em>, <em>CFSession</em>. And finally a <em>build</em> method that returns an object of <em>CFEMICardPayment</em>.
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK16CFEMICardPayment23CFEMICardPaymentBuilder")
@interface CFEMICardPaymentBuilder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the value for CFEMICard variable of the CFEMICardPayment class
/// \param card It takes a parameter of type CFEMICard
///
///
/// returns:
/// It returns an instance of <em>CFEMICardPaymentBuilder</em> to continue the build process
- (CFEMICardPaymentBuilder * _Nonnull)setCard:(CFEMICard * _Nonnull)card SWIFT_WARN_UNUSED_RESULT;
- (CFEMICardPaymentBuilder * _Nonnull)savePaymentMethod:(BOOL)flag SWIFT_WARN_UNUSED_RESULT;
/// This method sets the value for CFSession variable of the CFEMICardPayment class
/// \param session It takes a parameter of type CFSession
///
///
/// returns:
/// It returns an instance of <em>CFEMICardPaymentBuilder</em> to continue the build process
- (CFEMICardPaymentBuilder * _Nonnull)setSession:(CFSession * _Nonnull)session SWIFT_WARN_UNUSED_RESULT;
/// This method builds an object of <em>CFEMICardPayment</em>
///
/// throws:
/// It throws an error (CashfreeError), in case <em>CFEMICard</em> or <em>CFSession</em> is not set.
///
/// returns:
/// It returns an object of <em>CFEMICardPayment</em>
- (CFEMICardPayment * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, CFENVIRONMENT, open) {
  CFENVIRONMENTPRODUCTION = 0,
  CFENVIRONMENTSANDBOX = 1,
};


/// The CFErrorResponse class consists of class variables using which error codes and message can be sent back to the user in case of <em>Failed API</em> or <em>No Internet</em> or <em>Invalid Card Details</em> and more.
SWIFT_CLASS("_TtC17CashfreePGCoreSDK15CFErrorResponse")
@interface CFErrorResponse : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;
@class UIImage;

/// CFImageView inherits UIImageView. The user has to create a UIImageView and set the custom class to CFImageView (in case of storyboard UI creation) else use the below code snippet to create a image-view:-
/// <ul>
///   <li>
///     <h2>Code Snippet</h2>
///   </li>
/// </ul>
/// \code
/// var cashfreeImageView: CFImageView!
/// override func viewDidLoad() {
///     super.viewDidLoad()
///
///     .......
///
///     self.cashfreeImageView = CFImageView(frame: .zero)
///     self.cashfreeImageView.translatesAutoresizingMaskIntoConstraints = false
///     self.view.addSubview(cashfreeImageView)
///     self.cashfreeImageView.topAnchor.constraint(equalTo: view.topAnchor, constant: 0).isActive = true
///     self.cashfreeImageView.bottomAnchor.constraint(equalTo: view.bottomAnchor, constant: 0).isActive = true
///     self.cashfreeImageView.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 0).isActive = true
///     self.cashfreeImageView.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: 0).isActive = true
///
///     do {
///         try self.cashfreeImageView.loadQRCode()
///     } catch let e {
///         let error = e as! CashfreeError
///         print(error.localizedDescription)
///     }
/// }
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK11CFImageView")
@interface CFImageView : UIImageView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// This method generates the QRCode as an image and sets it to the image-view which can be scanned by any UPI app to make payment.
///
/// throws:
/// In case there is any error while generating the QRCode, this method throws an exception, so that the errors can be handled gracefully.
- (BOOL)loadQRCodeAndReturnError:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage SWIFT_UNAVAILABLE;
@end


/// This <em>CFNetbanking</em> class consists of all the parameters that are required to initiate payment using NetBanking payment mode. A CFNetbanking object can be build with the help of a <code>CFNetbankingBuilder</code> class that is embedded within the CFNetbanking class.
/// \code
/// do {
///     let netbanking = try CFNetbanking.CFNetbankingBuilder()
///         .setBankCode(3003)
///         .build()
/// } catch let e {
///    let error = e as! CashfreeError
///    print(error.localizedDescription)
/// }
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK12CFNetbanking")
@interface CFNetbanking : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// CFNetbankingBuilder class consists of all the setters that are needed to build an object of type <code>CFNetbanking</code>
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK12CFNetbanking19CFNetbankingBuilder")
@interface CFNetbankingBuilder : NSObject
/// No Argument constructor. All variables are set using builder-setters
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This methos sets the bank code (Visit https://dev.cashfree.com/payment-gateway/payments/netbanking for all the bank codes)
/// \param code A parameter of type Integer is taken as input, which is the bank code
///
///
/// returns:
/// It returns an instance of <em>CFNetbankingBuilder</em> to continue building the <em>CFNetbanking</em> object
- (CFNetbankingBuilder * _Nonnull)setBankCode:(NSInteger)code SWIFT_WARN_UNUSED_RESULT;
/// This method creates an object of CFNetbanking
///
/// throws:
/// In case there is any mandatory parameter missing, it throws an exception
///
/// returns:
/// The method returns an object of type <em>CFNetbanking</em> which can be used to initiate Netbanking payment mode.
- (CFNetbanking * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


/// The CFNetbankingPayment is a sub-class of CFPayment. An object of this class has to be created with the help of <em>CFNetbankingPaymentBuilder</em> class and that object has to be sent to <code>CFPaymentGatewayService</code> while initiating the payment. An object of <code>CFNetbanking</code>, <code>CFSession</code> for Netbanking payment are the class variables.
/// <h2>Code Snippet</h2>
/// \code
/// let cfSession = ...
/// let netbanking = ...
/// let netbankingPaymentObject = try CFNetbankingPayment.CFNetbankingPaymentBuilder()
///     .setSession(cfSession)
///     .setNetbanking(netbanking)
///     .build()
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK19CFNetbankingPayment")
@interface CFNetbankingPayment : CFPayment
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)printDescription;
@end


/// The CFNetbankingPaymentBuilder class can be used to create an object of CFNetbankingObject. It consists of setter methods to set the values for <em>CFNetbanking</em>, <em>CFSession</em>. And finally a <em>build</em> method that returns an object of <em>CFNetbankingPayment</em>.
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK19CFNetbankingPayment26CFNetbankingPaymentBuilder")
@interface CFNetbankingPaymentBuilder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the value for CFSession variable of the CFNetbankingPayment class
/// \param session It takes a parameter of type CFSession
///
///
/// returns:
/// It returns an instance of <em>CFNetbankingPaymentBuilder</em> to continue the build process
- (CFNetbankingPaymentBuilder * _Nonnull)setSession:(CFSession * _Nonnull)session SWIFT_WARN_UNUSED_RESULT;
/// This method sets the value for CFNetbanking variable of the CFNetbankingPayment class
/// \param netbanking It takes a parameter of type CFNetbanking
///
///
/// returns:
/// It returns an instance of <em>CFNetbankingPaymentBuilder</em> to continue the build process
- (CFNetbankingPaymentBuilder * _Nonnull)setNetbanking:(CFNetbanking * _Nonnull)netbanking SWIFT_WARN_UNUSED_RESULT;
/// This method builds an object of <em>CFNetbankingPayment</em>
///
/// throws:
/// It throws an error (CashfreeError), in case <em>CFNetbanking</em> or <em>CFSession</em> is not set.
///
/// returns:
/// It returns an object of <em>CFNetbankingPayment</em>
- (CFNetbankingPayment * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, CFPLATFORM, open) {
  CFPLATFORMIOS = 0,
  CFPLATFORMReact_Native_iOS = 1,
  CFPLATFORMFlutter_iOS = 2,
  CFPLATFORMCapacitor_iOS = 3,
  CFPLATFORMXamarin_iOS = 4,
  CFPLATFORMCordova_iOS = 5,
};


/// The <em>CFPaylater</em> consists of all the parameters that are required to initiate payment using Pay Later Payment mode. A CFPaylater object can be created with the help of <code>CFPaylater</code> class that is embedded within the CFPaylater class.
/// <h2>Code Snippet</h2>
/// \code
/// do {
///    let payLater = try CFPaylater.CFPaylater()
///        .setProvider("lazypay")
///        .setPhone("9999999999")
///        .build()
/// } catch let e {
///    let error = e as! CashfreeError
///    print(error.localizedDescription)
/// }
///
/// \endcodenote:
/// The value of provider can be any of  the following:
/// \code
///      * lazypay
///      * zestmoney
///      * olapostpaid
///      * kotak
///      * flexipay
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK10CFPaylater")
@interface CFPaylater : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The <em>CFPaylaterBuilder</em> class consists of all the setters that are needed to build an object of type <code>CFPaylater</code>
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK10CFPaylater17CFPaylaterBuilder")
@interface CFPaylaterBuilder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the value as to which wallet has to be used to make payment.
/// \param provider The parameter takes in a String and the value has to be the name of the paylater provider (<em>lazypay, zestmoney, olapostpaid, kotak, flexipay</em>)
///
///
/// returns:
/// It returns an instance of <em>CFPaylaterBuilder</em> to continue building the <em>CFPaylater</em> object
- (CFPaylaterBuilder * _Nonnull)setProvider:(NSString * _Nonnull)provider SWIFT_WARN_UNUSED_RESULT;
/// This method sets the phone number to authenticate the wallet account and make payment
/// \param phone The parameter takes in a String, which is the phone number.
///
///
/// returns:
/// It returns an instance of <em>CFPaylaterBuilder</em> to continue building the <em>CFPaylater</em> object
- (CFPaylaterBuilder * _Nonnull)setPhone:(NSString * _Nonnull)phone SWIFT_WARN_UNUSED_RESULT;
/// The method creates an object of <em>CFPaylater</em>
///
/// throws:
/// In case the mandatory parameters are empty, an exception gets thrown
///
/// returns:
/// It returns an object of <em>CFPaylater</em>
- (CFPaylater * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


/// The CFPaylaterPayment is a sub-class of CFPayment. An object of this class has to be created with the help of <em>CFPaylaterPaymentBuilder</em> class and that object has to be sent to <code>CFPaymentGatewayService</code> while initiating the payment. An object of <code>CFPaylater</code>, <code>CFSession</code> for Pay Later payment are the class variables.
/// <h2>Code Snippet</h2>
/// \code
/// let cfSession = ...
/// let payLater = ...
/// let cfWalletPaymentObject = try CFPaylaterPayment.CFPaylaterPaymentBuilder()
///     .setSession(cfSession)
///     .setPaylater(payLater)
///     .build()
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK17CFPaylaterPayment")
@interface CFPaylaterPayment : CFPayment
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)printDescription;
@end


/// The CFWalletPaymentBuilder class can be used to create an object of CFWalletPayment. It consists of setter methods to set the values for <em>CFWallet</em>, <em>CFSession</em>. And finally a <em>build</em> method that returns an object of <em>CFWalletPayment</em>.
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK17CFPaylaterPayment24CFPaylaterPaymentBuilder")
@interface CFPaylaterPaymentBuilder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the value for CFSession variable of the CFWalletPayment class
/// \param session It takes a parameter of type CFSession
///
///
/// returns:
/// It returns an instance of <em>CFWalletPaymentBuilder</em> to continue the build process
- (CFPaylaterPaymentBuilder * _Nonnull)setSession:(CFSession * _Nonnull)session SWIFT_WARN_UNUSED_RESULT;
/// This method sets the value for CFWallet variable of the CFWalletPayment class
/// \param wallet It takes a parameter of type CFWallet
///
///
/// returns:
/// It returns an instance of <em>CFWalletPaymentBuilder</em> to continue the build process
- (CFPaylaterPaymentBuilder * _Nonnull)setPaylater:(CFPaylater * _Nonnull)paylater SWIFT_WARN_UNUSED_RESULT;
/// This method builds an object of <em>CFWalletPayment</em>
///
/// throws:
/// It throws an error (CashfreeError), in case <em>CFWallet</em> or <em>CFSession</em> is not set.
///
/// returns:
/// It returns an object of <em>CFWalletPayment</em>
- (CFPaylaterPayment * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end



/// The CFErrorResponse class consists of class variables using which error codes and message can be sent back to the user in case of <em>Failed API</em> or <em>No Internet</em> or <em>Invalid Card Details</em> and more.
SWIFT_CLASS("_TtC17CashfreePGCoreSDK17CFPaymentResponse")
@interface CFPaymentResponse : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The CFQRCodePayment is a sub-class of CFPayment. An object of this class has to be created with the help of <em>CFQRCodePaymentBuilder</em> class and that object has to be sent to <code>CFPaymentGatewayService</code> while initiating the payment. An object of<code>CFSession</code>  for QRCode payment are the class variables.
/// <h2>Code Snippet</h2>
/// \code
/// let cfSession = ...
/// let wallet = ...
/// let qrCodePaymentObject = try CFQRCodePayment.CFQRCodePaymentBuilder()
///     .setSession(cfSession)
///     .build()
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK15CFQRCodePayment")
@interface CFQRCodePayment : CFPayment
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)printDescription;
@end


/// The CFQRCodePaymentBuilder class can be used to create an object of CFQRCodePayment. It consists of setter methods to set the values for <em>CFSession</em> . And finally a <em>build</em> method that returns an object of <em>CFQRCodePayment</em>.
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK15CFQRCodePayment22CFQRCodePaymentBuilder")
@interface CFQRCodePaymentBuilder : NSObject
/// No Argument Constructor
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP17CashfreePGCoreSDK18CFResponseDelegate_")
@protocol CFResponseDelegate
- (void)onError:(CFErrorResponse * _Nonnull)error order_id:(NSString * _Nonnull)order_id;
- (void)verifyPaymentWithOrder_id:(NSString * _Nonnull)order_id;
@optional
- (void)loadQRAndVerifyPaymentWithBase64:(NSString * _Nonnull)base64 order_id:(NSString * _Nonnull)order_id;
@end


/// The CFSession class wiith the help of CFSessionBuilder class helps in gathering mandatory information to initiate a payment session. The CFSession object can be built with the of <code>CFSessionBuilder</code> which is a class embedded inside the CFSession class.
/// note:
/// In case the mandatory variables are empty or null, custom errors adhering to Error protocol will be thrown, which can be used to handle the errors gracefully.
/// <h2>Code Snippet</h2>
/// \code
/// do {
///     let cfSession = try CFSession.CFSessionBuilder()
///     .setOrderToken("order_token")
///     .setEnvironment(.SANDBOX)
///     .setOrderId("order_id")
///     .build()
/// } catch let e {
///     let error = e as! CashfreeError
///     print(error.localizedDescription)
/// }
///
/// \endcodenote:
/// The “order_token” is used to authenticate the payment requests made from SDK. It has to be generated for every payment attempt made for an order. Pass this token to the SDK while initiating the payment for that order. For generating a “order_token” you need to use our order creation API. The below code snippet is an example JSON that has to be used to generate the “order_token”
/// <h2>Code Snippet</h2>
/// \code
/// {
///     "order_amount": 1.00,
///     "order_currency": "INR",
///     "order_id": "order_12341234"
///     "customer_details": {
///         "customer_id": "customer_id",
///         "customer_name": "Customer Name",
///         "customer_email": "customeremail@example.com",
///         "customer_phone": "customer phone"
///     },
///     "order_meta": {
///         "notify_url": "https://cashfree.com"
///     },
///     "order_note": "some order note here"
/// }
///
/// \endcode<ul>
///   <li>
///     The above JSON has to be sent as body of the request to the end-point “https://prod.cashfree.com/pgnextgenapi-test/api/v1/orders”. The request should also consist of headers, which are as follows :-
///   </li>
/// </ul>
/// \code
/// Content-Type:application/json
/// X-client-id:{{apiKey}}
/// X-client-secret:{{apiSecret}}
/// x-api-version:2021-05-21
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK9CFSession")
@interface CFSession : NSObject
- (void)printDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This class provides builder methods that help in creating an object of <code>CFSession</code>
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK9CFSession16CFSessionBuilder")
@interface CFSessionBuilder : NSObject
/// No Arguments Constructor
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// The method sets the value of the generated token to the CFSession Object (The order creation should be strictly a server to server call)
/// \param token Send the token that is generated. The token consists of the entire order details.
///
///
/// returns:
/// The method returns an instance of CFSessionBuilder to continue building the CFSession object
- (CFSessionBuilder * _Nonnull)setOrderToken:(NSString * _Nonnull)token SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the Order Id to the CFSession Object (The order creation should be strictly a server to server call)
/// \param token Send the Order Id of the order under process.
///
///
/// returns:
/// The method returns an instance of CFSessionBuilder to continue building the CFSession object
- (CFSessionBuilder * _Nonnull)setOrderID:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
/// The method sets the value of the environment in which the payment has to be executed
/// \param environment The value of the environment can be either SANDBOX or PRODUCTION depending on the environment the payment has to be executed
///
///
/// returns:
/// The method returns an instance of CFSessionBuilder to continue building the CFSession object
- (CFSessionBuilder * _Nonnull)setEnvironment:(enum CFENVIRONMENT)environment SWIFT_WARN_UNUSED_RESULT;
/// The method validates the input, to check if the inputs are either nil or empty
///
/// throws:
/// In case of validation failure, a custom error adhering to Error protocol is thrown.
///
/// returns:
/// The method returns a CFSession Object, which has to be used further in the integration process
- (CFSession * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


/// The CFUPI class is used to set the upi_vpa or the upi_id that can be used to initiate payment using UPI Collect or UPI Intent. With the help of <code>CFUPIBuilder</code> Class, an object of CFUPI can be built and this object can be further used to initiate the payment.
/// <h2>Code Snippet</h2>
/// \code
/// do {
///    let cfUPICollect = try CFUPI.CFUPIBuilder()
///        .setChannel(.COLLECT)
///        .setUpiId("test@gocashfree")
///        .build()
/// } catch let e {
///    let error = e as! CashfreeError
///    print(error.localisedDescription)
/// }
///
/// \endcode\code
/// * Note: If you are integrating *UPI Collect* flow:
///             
///     * The parameter of setChannel() has to be set to .COLLECT
///     * The value of setUpiId() has to contain the "upi_vpa" value (for instance:- "9999999999@ybl")
///
/// * Note: If you are integrating *UPI Intent* flow (making payment using installed UPI applications):-
///             
///     * Get the list of installed UPI applications by using CFConfiguration().getInstalledUPIApplications() and build the User Interface.
///     * The above method returns an array of object, with each object consisting of three key value pairs (id, displayName, icon).
///     * The parameter of setChannel() has to be set to .INTENT
///     * The parameter of setUpiId() has to contain the id(mentioned above) of the clicked application which is part of the list retrieved.
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK5CFUPI")
@interface CFUPI : NSObject
- (void)printDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum CFUPIMODE : NSInteger;

/// The <em>CFUPIBuilder</em> class consists of all the setter methods required to create an object of <code>CFUPI</code>
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK5CFUPI12CFUPIBuilder")
@interface CFUPIBuilder : NSObject
/// No Argument Constructor
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the channel, which initiates the payment in a particular mde
/// \param channel The parameter takes in a String and sets the value of the channel.
///
///
/// returns:
/// It returns an instance of <em>CFUPIBuilder</em> to further continue building an object of <em>CFUPI</em>
- (CFUPIBuilder * _Nonnull)setChannel:(enum CFUPIMODE)channel SWIFT_WARN_UNUSED_RESULT;
/// This method sets the UPI ID of the user in case of UPI Collect flow or the UPI application that has to be launched in case of UPI Intent flow to which the payment notification gets triggered.
/// \param id It is of type String and the <em>upi_vpa</em> value or the <em>id</em> of the installed application has to be sent as the value to this id
///
///
/// returns:
/// It returns an instance of <em>CFUPIBuilder</em> to further continue building an object of <em>CFUPI</em>
- (CFUPIBuilder * _Nonnull)setUPIID:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
/// This methods creates an object of CFUPICollect by setting the value of channel and upi_id and returns the object back to the calling method
///
/// throws:
/// In case the value is null or empty an Error (CashfreeError.UPI_ID_MSSING) is thrown and the exception can be handled gracefullt
///
/// returns:
/// It returns an object of CFUPICollect which can be used to Initiate the CFUPICollect Payment Mode
- (CFUPI * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, CFUPIMODE, open) {
  CFUPIMODECOLLECT = 0,
  CFUPIMODEINTENT = 1,
};


/// The CFUPIPayment is a sub-class of CFPayment. An object of this class has to be created with the help of <em>CFUPIPaymentBuilder</em> class and that object has to be sent to <code>CFPaymentGatewayService</code> while initiating the payment. An object of <code>CFUPI</code>, <code>CFSession</code>  for UPI payment are the class variables.
/// <h2>Code Snippet</h2>
/// \code
/// let cfSession = ...
/// let cfUPICollect = ...
/// let cfUPIPaymentObject = try CFUPIPayment.CFUPIPaymentBuilder()
///     .setSession(cfSession)
///     .setUPI(cfUPICollect)
///     .build()
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK12CFUPIPayment")
@interface CFUPIPayment : CFPayment
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)printDescription;
@end


/// The CFUPIPaymentBuilder class can be used to create an object of CFUPIPayment. It consists of setter methods to set the values for <em>CFUPI</em>, <em>CFSession</em>. And finally a <em>build</em> method that returns an object of <em>CFUPIPayment</em>.
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK12CFUPIPayment19CFUPIPaymentBuilder")
@interface CFUPIPaymentBuilder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the value for CFUPI variable of the CFUPIPayment class
/// \param upi It takes a parameter of type CFUPI
///
///
/// returns:
/// It returns an instance of <em>CFUPIPaymentBuilder</em> to continue the build process
- (CFUPIPaymentBuilder * _Nonnull)setUPI:(CFUPI * _Nonnull)upi SWIFT_WARN_UNUSED_RESULT;
/// This method sets the value for CFSession variable of the CFUPIPayment class
/// \param session It takes a parameter of type CFSession
///
///
/// returns:
/// It returns an instance of <em>CFUPIPaymentBuilder</em> to continue the build process
- (CFUPIPaymentBuilder * _Nonnull)setSession:(CFSession * _Nonnull)session SWIFT_WARN_UNUSED_RESULT;
/// This method builds an object of <em>CFUPIPayment</em>
///
/// throws:
/// It throws an error (CashfreeError), in case <em>CFUPI</em> or <em>CFSession</em> is not set.
///
/// returns:
/// It returns an object of <em>CFUPIPayment</em>
- (CFUPIPayment * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


/// <em>CFUPIUtils</em> class helps in getting any configurations that are needed prior to making the payment page. One such example is getting the list of all the installed UPI applications from the user’s phone. The class provides a method called <code>CFUPIUtils().getInstalledUPIApplications()</code> which sends back a list of UPI applications installed in the user’s phone.
/// note:
/// Add the following permissions to info.plist file
/// \code
///  <key>LSApplicationCategoryType</key>
///  <string></string>
///  <key>LSApplicationQueriesSchemes</key>
///  <array>
///      <string>bhim</string>
///      <string>paytm</string>
///      <string>phonepe</string>
///      <string>tez</string>
///  </array>
///
/// \endcode<ul>
///   <li>
///     <h2>Code Snippet</h2>
///   </li>
/// </ul>
/// \code
/// let installedApps = CFUPIUtils().getInstalledUPIApplications()
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK10CFUPIUtils")
@interface CFUPIUtils : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method returns list of installed UPI applications in the user’s phone
///
/// returns:
/// An array of dictionary ([String: String]) is returned. Each object consists of “displayName”, “id” and “icon” as the keys with respective values in string format.
- (NSArray<NSDictionary<NSString *, NSString *> *> * _Nonnull)getInstalledUPIApplications SWIFT_WARN_UNUSED_RESULT;
@end


/// The <em>CFWallet</em> consists of all the parameters that are required to initiate payment using Wallet Payment mode. A CFWallet object can be created with the help of <code>CFWalletBuilder</code> class that is embedded within the CFWallet class.
/// <h2>Code Snippet</h2>
/// \code
/// do {
///    let wallet = try CFWallet.CFWalletBuilder()
///        .setProvider("phonepe")
///        .setPhone("9999999999")
///        .build()
/// } catch let e {
///    let error = e as! CashfreeError
///    print(error.localizedDescription)
/// }
///
/// \endcodenote:
/// The value of provider can be any of  the following:
/// \code
///      * phonepe
///      * paytm
///      * amazon
///      * airtel
///      * freecharge
///      * mobikwik
///      * jio
///      * ola
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK8CFWallet")
@interface CFWallet : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The <em>CFWalletBuilder</em> class consists of all the setters that are needed to build an object of type <code>CFWallet</code>
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK8CFWallet15CFWalletBuilder")
@interface CFWalletBuilder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the value as to which wallet has to be used to make payment.
/// \param provider The parameter takes in a String and the value has to be the name of the wallet (<em>gpay,phonepe,paytm,amazon,airtel,freecharge,mobikwik,jio,ola</em>)
///
///
/// returns:
/// It returns an instance of <em>CFWalletBuilder</em> to continue building the <em>CFWallet</em> object
- (CFWalletBuilder * _Nonnull)setProvider:(NSString * _Nonnull)provider SWIFT_WARN_UNUSED_RESULT;
/// This method sets the phone number to authenticate the wallet account and make payment
/// \param phone The parameter takes in a String, which is the phone number.
///
///
/// returns:
/// It returns an instance of <em>CFWalletBuilder</em> to continue building the <em>CFWallet</em> object
- (CFWalletBuilder * _Nonnull)setPhone:(NSString * _Nonnull)phone SWIFT_WARN_UNUSED_RESULT;
/// The method creates an object of <em>CFWallet</em>
///
/// throws:
/// In case the mandatory parameters are empty, an exception gets thrown
///
/// returns:
/// It returns an object of <em>CFWallet</em>
- (CFWallet * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


/// The CFWalletPayment is a sub-class of CFPayment. An object of this class has to be created with the help of <em>CFWalletPaymentBuilder</em> class and that object has to be sent to <code>CFPaymentGatewayService</code> while initiating the payment. An object of <code>CFWallet</code>, <code>CFSession</code> for Netbanking payment are the class variables.
/// <h2>Code Snippet</h2>
/// \code
/// let cfSession = ...
/// let wallet = ...
/// let cfWalletPaymentObject = try CFWalletPayment.CFWalletPaymentBuilder()
///     .setSession(cfSession)
///     .setWallet(wallet)
///     .build()
///
/// \endcode
SWIFT_CLASS("_TtC17CashfreePGCoreSDK15CFWalletPayment")
@interface CFWalletPayment : CFPayment
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)printDescription;
@end


/// The CFWalletPaymentBuilder class can be used to create an object of CFWalletPayment. It consists of setter methods to set the values for <em>CFWallet</em>, <em>CFSession</em>. And finally a <em>build</em> method that returns an object of <em>CFWalletPayment</em>.
SWIFT_CLASS("_TtCC17CashfreePGCoreSDK15CFWalletPayment22CFWalletPaymentBuilder")
@interface CFWalletPaymentBuilder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This method sets the value for CFSession variable of the CFWalletPayment class
/// \param session It takes a parameter of type CFSession
///
///
/// returns:
/// It returns an instance of <em>CFWalletPaymentBuilder</em> to continue the build process
- (CFWalletPaymentBuilder * _Nonnull)setSession:(CFSession * _Nonnull)session SWIFT_WARN_UNUSED_RESULT;
/// This method sets the value for CFWallet variable of the CFWalletPayment class
/// \param wallet It takes a parameter of type CFWallet
///
///
/// returns:
/// It returns an instance of <em>CFWalletPaymentBuilder</em> to continue the build process
- (CFWalletPaymentBuilder * _Nonnull)setWallet:(CFWallet * _Nonnull)wallet SWIFT_WARN_UNUSED_RESULT;
/// This method builds an object of <em>CFWalletPayment</em>
///
/// throws:
/// It throws an error (CashfreeError), in case <em>CFWallet</em> or <em>CFSession</em> is not set.
///
/// returns:
/// It returns an object of <em>CFWalletPayment</em>
- (CFWalletPayment * _Nullable)buildAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, CashfreeError, open) {
  CashfreeErrorAPP_ID_MISSING = 0,
  CashfreeErrorORDER_TOKEN_MISSING = 1,
  CashfreeErrorORDER_ID_MISSING = 2,
  CashfreeErrorENVIRONMENT_MISSING = 3,
  CashfreeErrorINVALID_ENVIRONMENT = 4,
  CashfreeErrorCHANNEL_MISSING = 5,
  CashfreeErrorCARD_NUMBER_MISSING = 6,
  CashfreeErrorCARD_HOLDER_NAME_MISSING = 7,
  CashfreeErrorCARD_EXPIRY_MONTH_MISSING = 8,
  CashfreeErrorCARD_EXPIRY_YEAR_MISSING = 9,
  CashfreeErrorCARD_CVV_MISSING = 10,
  CashfreeErrorCARD_BANK_NAME_MISSING = 11,
  CashfreeErrorCARD_EMI_TENURE_MISSING = 12,
  CashfreeErrorUPI_ID_MISSING = 13,
  CashfreeErrorINVALID_UPI_APP_ID_SENT = 14,
  CashfreeErrorPROVIDER_MISSING = 15,
  CashfreeErrorPHONE_NUMBER_MISSING = 16,
  CashfreeErrorNB_BANK_CODE_MISSING = 17,
  CashfreeErrorNB_BANK_NAME_MISSING = 18,
  CashfreeErrorNB_BANK_IFSC_MISSING = 19,
  CashfreeErrorNB_BANK_ACCOUNT_NUMBER_MISSING = 20,
  CashfreeErrorPAYMENT_OBJECT_MISSING = 21,
  CashfreeErrorINVALID_PAYMENT_OBJECT_SENT = 22,
  CashfreeErrorSESSION_OBJECT_MISSING = 23,
  CashfreeErrorCALLBACK_MISSING = 24,
  CashfreeErrorCARD_OBJECT_MISSING = 25,
  CashfreeErrorNETBANKING_OBJECT_MISSING = 26,
  CashfreeErrorWALLET_OBJECT_MISSING = 27,
  CashfreeErrorPAYLATER_OBJECT_MISSING = 28,
  CashfreeErrorUPI_OBJECT_MISSING = 29,
  CashfreeErrorWEB_VIEW_CALLBACK_MISSING = 30,
  CashfreeErrorINVALID_WEB_DATA = 31,
  CashfreeErrorINVALID_QRCODE_DATA = 32,
  CashfreeErrorIMAGE_VIEW_CALLBACK_MISSING = 33,
  CashfreeErrorMISSING_CALLBACK = 34,
  CashfreeErrorMISSING_VIEW_CONTROLLER_INSTANCE = 35,
  CashfreeErrorHEX_SHOULD_START_WITH = 36,
  CashfreeErrorCOMPONENTS_MISSING = 37,
  CashfreeErrorONE_PAYMENT_COMPONENT_SHOULD_BE_PRESENT = 38,
};
static NSString * _Nonnull const CashfreeErrorDomain = @"CashfreePGCoreSDK.CashfreeError";


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
