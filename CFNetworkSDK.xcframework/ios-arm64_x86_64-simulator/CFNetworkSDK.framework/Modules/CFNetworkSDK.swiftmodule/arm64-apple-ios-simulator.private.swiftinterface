// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name CFNetworkSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import CFNetworkSDK
import Foundation
import Swift
import _Concurrency
import _StringProcessing
public enum APIState : Swift.Int {
  case VERIFY
  case CONFIG_FETCH
  case SAVED_CARDS
  case PAY
  case ANALYTICS
  case RESEND_OTP
  case SUBMIT_OTP
  case DELETE_CARDS
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
public protocol APIHandlers : AnyObject {
  func onSuccess(apiState: CFNetworkSDK.APIState, result: Swift.Dictionary<Swift.String, Any>)
  func onSuccess(apiState: CFNetworkSDK.APIState, result: [Swift.Dictionary<Swift.String, Any>])
  func onFailure(apiState: CFNetworkSDK.APIState, response: Swift.Dictionary<Swift.String, Any>)
}
public protocol CFNetworkDelegate {
  func didCompleteAPICall(data: Foundation.Data?, response: Foundation.URLResponse?, error: (any Swift.Error)?, apiState: CFNetworkSDK.APIState, apiHandler: any CFNetworkSDK.APIHandlers)
}
open class CFNetworkLayer {
  public init()
  public func request(url: Foundation.URL, body: Swift.Dictionary<Swift.String, Any>?, method: Swift.String, headers: [Swift.String : Swift.String], delegate: any CFNetworkSDK.CFNetworkDelegate, apiState: CFNetworkSDK.APIState, apiHandler: any CFNetworkSDK.APIHandlers)
  @objc deinit
}
extension CFNetworkSDK.APIState : Swift.Equatable {}
extension CFNetworkSDK.APIState : Swift.Hashable {}
extension CFNetworkSDK.APIState : Swift.RawRepresentable {}
